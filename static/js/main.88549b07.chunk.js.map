{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/UI/Spinner/Spinner.js","containers/ArtistInfo/ArtistInfo.js","components/BarChart/Rect/Rect.js","components/BarChart/BarChart.js","components/MetricViewBar/MetricViewBar.js","containers/SocialMediaMetrics/SocialMediaMetrics.js","components/BubbleChart/BubbleChart.js","containers/TrackMetrics/TrackMetrics.js","App.js","index.js"],"names":["navigationBar","props","react_default","a","createElement","className","id","type","placeholder","onChange","handleArtistChange","href","spinner","artistInfo","image","info","genre","content","isLoaded","Spinner_Spinner","height","src","images","alt","name","genres","join","Fragment","style","textAlign","Rect","state","x","y","width","fill","rect","_this$state","this","yExtent","d3","refs","attr","yScale","transition","duration","exit","remove","_this$state2","ref","nextProps","prevState","Component","margin","BarChart","bars","xScale","range","wScale","paddingInner","paddingOuter","accentScale","xAxis","_this","tickFormat","yAxis","nextState","call","_this2","transform","concat","map","d","i","BarChart_Rect_Rect","key","bandwidth","chartData","startDate","endDate","data","filter","sDate","moment","unix","eDate","date","value","domain","metricViewBar","buttons","metricNames","obj","onClick","clicked","bind","fullName","Range","createSliderWithTooltip","Slider","startDateUnix","Date","subtract","endDateUnix","socialMediaMetrics","metrics","getChartData","metricId","reduce","acc","metric","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","metricMetadata","items","Symbol","iterator","next","done","m","push","err","return","sort","b","MetricViewBar_MetricViewBar","handleMetricIdChange","components_BarChart_BarChart","format","defaultValue","min","max","step","allowCross","tipFormatter","onAfterChange","onRangeChange","simulation","force","strength","BubbleChart","circles","rScale","cScale","forceTick","node","radius","on","renderCircles","nodes","alpha","restart","_this3","_this4","svgContainer","selectAll","nodeEnter","enter","append","label","merge","select","text","length","substring","top15","summary","TW","slice","metadata","asset_name","trackMetrics","circleData","getTrackData","components_BubbleChart_BubbleChart","handleBubbles","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","artist","artistId","trackMetricId","bubbleData","event","emitDebouncedSearch","target","handleArtistSearch","val","setState","dataArr","item","timeseries","deltas","totals","keys","e","debounce","grabMetricMetadata","grabArtistMetric","prevProps","axios","get","then","response","catch","error","console","log","artists","resetArtistInfo","grabTrackMetrics","grabArtistInfo","_this5","NavigationBar_NavigationBar","ArtistInfo_ArtistInfo","SocialMediaMetrics_SocialMediaMetrics","TrackMetrics_TrackMetrics","defaults","baseURL","params","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.88549b07.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavigationBar.css\";\n\nconst navigationBar = props => {\n  return (\n    <nav className=\"NavigationBar\">\n      <div className=\"NavigationBar__search-bar\">\n        <input\n          id=\"search\"\n          className=\"artistSearchInput\"\n          type=\"text\"\n          placeholder=\"Search For An Artist\"\n          onChange={props.handleArtistChange}\n        />\n      </div>\n      <div className=\"NavigationBar__links\">\n        <ul className=\"NavigationBar__ul\">\n          <li className=\"NavigationBar__li\">\n            <a href=\"#artistInfo\" className=\"NavigationBar__href\">\n              Artist Info\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#socialMedia\" className=\"NavigationBar__href\">\n              Social Media\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#trackSpins\" className=\"NavigationBar__href\">\n              Track Spins\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default navigationBar;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst spinner = () => {\n  return <div className=\"Loader\">Loading...</div>;\n};\n\nexport default spinner;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport \"./ArtistInfo.css\";\n\nconst artistInfo = props => {\n  let image = null;\n  let info = null;\n  let genre = null;\n  let content = null;\n\n  //if search is pending. show loading spinner.\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  //when artist info is retrived. load content instead of spinner.\n  if (props.artistInfo) {\n    image = (\n      <img height=\"100\" src={props.artistInfo.images[0][100]} alt=\"Artist\" />\n    );\n    info = <h1>Artist Name: {props.artistInfo.name}</h1>;\n    genre = <h2>Genre: {props.artistInfo.genres.join(\" \")}</h2>;\n\n    content = (\n      <>\n        {image}\n        <div style={{ textAlign: \"center\" }}>\n          {info}\n          {genre}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"artistInfo\" className=\"ArtistInfo\">\n      <div className=\"ArtistInfo__label\">\n        <span>Artist Info</span>\n      </div>\n      <div className=\"ArtistInfo__info\">{content}</div>\n    </div>\n  );\n};\n\nexport default artistInfo;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Rect extends Component {\n  state = { x: null, y: null, width: null, height: null, fill: null };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    return {\n      x: nextProps.x,\n      y: nextProps.y,\n      width: nextProps.width,\n      height: nextProps.height,\n      fill: nextProps.fill\n    };\n  }\n\n  componentDidUpdate() {\n    const { y, height } = this.state;\n\n    let rect;\n\n    //use yExtent if exists, if not use linear scale from range 0\n    if (this.props.yExtent) {\n      rect = d3\n        .select(this.refs.rect)\n        .attr(\"y\", this.props.yScale(this.props.yExtent[0]));\n    } else {\n      rect = d3.select(this.refs.rect).attr(\"y\", this.props.yScale(0));\n    }\n\n    //set up bar transition\n    rect\n      .attr(\"height\", 0)\n      .transition()\n      .duration(800)\n      .attr(\"y\", y)\n      .attr(\"height\", height);\n\n    rect.exit().remove();\n  }\n\n  render() {\n    const { x, y, height, width, fill } = this.state;\n\n    return (\n      <rect ref=\"rect\" x={x} y={y} height={height} width={width} fill={fill} />\n    );\n  }\n}\n\nexport default Rect;\n","import React, { Component } from \"react\";\nimport Rect from \"./Rect/Rect\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 60, top: 20, right: 20, bottom: 50 };\nconst height = 500 - margin.top - margin.bottom;\nconst width = 700 - margin.left - margin.right;\n\nclass BarChart extends Component {\n  state = {\n    bars: [],\n    xScale: d3.scaleTime().range([0, width]),\n    yScale: d3.scaleLinear().range([height, 0]),\n    //yScale: d3.scaleLog().range([height, 0]),\n    wScale: d3\n      .scaleBand()\n      .range([0, width])\n      .paddingInner(0.1)\n      .paddingOuter(0),\n    accentScale: d3.scaleSequential(d3.interpolateRdBu),\n    yExtent: null\n  };\n\n  //setting up axis and tick formats\n  xAxis = d3.axisBottom(this.state.xScale).tickFormat(d3.timeFormat(\"%b-%Y\"));\n  yAxis = d3.axisLeft(this.state.yScale);\n  //.ticks(4)\n  //.tickFormat(function(d) {\n  // return d;\n  //});\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps, !nextProps);\n    if (!nextProps) return null;\n\n    const { chartData, startDate, endDate } = nextProps;\n    //console.log(data);\n    const { xScale, yScale, wScale, accentScale } = prevState;\n\n    //clean data\n    const data = chartData\n      .filter(d => {\n        let sDate = moment.unix(startDate);\n        let eDate = moment.unix(endDate);\n        let date = moment(d.date);\n        return d.value && d.date && date >= sDate && date <= eDate;\n      })\n      .map(d => {\n        d.value = +d.value;\n        return d;\n      });\n\n    //recalculate scales with new data\n    xScale.domain(d3.extent(data, d => d.date));\n    yScale.domain([0, d3.max(data, d => d.value)]);\n    //Below is yscale for log\n    //const yExtent = d3.extent(data, d => d.value);\n    //yScale.domain(d3.extent(data, d => d.value));\n    wScale.domain(data.map(d => d.date));\n    accentScale.domain([d3.max(data, d => d.value), 0]);\n\n    //create rect x and y values.\n    const bars = data.map(d => {\n      return {\n        x: xScale(d.date),\n        y: yScale(d.value),\n        height: height - yScale(d.value),\n        fill: accentScale(d.value)\n      };\n    });\n\n    return { bars, yScale };\n  }\n\n  //Only update barChart if data has been changed.\n  shouldComponentUpdate(nextProps, nextState) {\n    //console.log(\"shouldComponentUpdate: this.state =\", this.state);\n    //console.log(\"shouldComponentUpdate: nextSate =\", nextState);\n    //console.log(this.state.bars !== nextState.bars);\n    return true;\n  }\n\n  //happens once. render x and y axis on loadup.\n  componentDidMount() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis);\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  //update axis when component updates\n  componentDidUpdate() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis);\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  render() {\n    return (\n      <svg\n        height={height + margin.top + margin.bottom}\n        width={width + margin.left + margin.right}\n      >\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          {this.state.bars.map((d, i) => {\n            return (\n              <Rect\n                key={i}\n                x={d.x}\n                y={d.y}\n                height={d.height}\n                width={this.state.wScale.bandwidth()}\n                fill={d.fill}\n                yScale={this.state.yScale}\n                // yExtent={this.state.yExtent}\n              />\n            );\n          })}\n          <g ref=\"xAxis\" transform={`translate(0, ${height})`} />\n          <g ref=\"yAxis\" />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport \"./MetricViewBar.css\";\n\nconst metricViewBar = props => {\n  let buttons;\n\n  if (props.metricNames) {\n    buttons = props.metricNames.map(obj => {\n      return (\n        <button key={obj.id} onClick={props.clicked.bind(this, obj.id)}>\n          {obj.fullName}\n        </button>\n      );\n    });\n  }\n\n  return <div className=\"metric-view-bar\">{buttons}</div>;\n};\n\nexport default metricViewBar;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport BarChart from \"../../components/BarChart/BarChart\";\nimport MetricViewBar from \"../../components/MetricViewBar/MetricViewBar\";\nimport Slider from \"rc-slider\";\n//import Range from \"rc-slider/lib/Range\";\nimport moment from \"moment\";\nimport \"rc-slider/assets/index.css\";\nimport \"./SocialMediaMetrics.css\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n//get 5 years ago in unix time\nconst startDateUnix = moment(new Date())\n  .subtract(5, \"y\")\n  .unix();\n//get todays date in unix time\nconst endDateUnix = moment(new Date()).unix();\n\nconst socialMediaMetrics = props => {\n  // let barChart = null;\n  let data = null;\n  let metricNames = null;\n  let content = null;\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n  //only do work if metrics is not null;\n  if (props.metrics) {\n    //Grab data if metric Id was changed\n    data = props.getChartData(props.metricId);\n    //grab list of metric names.\n    metricNames = props.metrics.data\n      .reduce((acc, metric) => {\n        for (let m of props.metricMetadata.items) {\n          if (m.id === metric.metricId) {\n            acc.push({ fullName: m.fullName, id: m.id });\n            break;\n          }\n        }\n        return acc;\n      }, [])\n      .sort((a, b) => {\n        return a.id - b.id;\n      });\n\n    content = (\n      <>\n        <MetricViewBar\n          clicked={props.handleMetricIdChange}\n          metricNames={metricNames}\n        />\n        {/* {props.chartTitle} */}\n        <BarChart\n          chartData={data}\n          startDate={props.startDate}\n          endDate={props.endDate}\n        />\n        <span>\n          {moment.unix(props.startDate).format(\"MMM Do YYYY\")}\n          {\"   -   \"}\n          {moment.unix(props.endDate).format(\"MMM Do YYYY\")}\n        </span>\n        <Range\n          className=\"range-slider\"\n          defaultValue={[props.startDate, props.endDate]}\n          min={startDateUnix}\n          max={endDateUnix}\n          step={86400 /*1 day in seconds*/}\n          allowCross={false}\n          tipFormatter={value => moment.unix(value).format(\"MMM Do YYYY\")}\n          onAfterChange={props.onRangeChange}\n        />\n      </>\n    );\n  }\n\n  //return barChart;\n  return (\n    <div id=\"socialMedia\" className=\"SocialMediaMetrics\">\n      <div className=\"SocialMediaMetrics__label\">\n        <span>Social Media</span>\n      </div>\n      <div className=\"SocialMediaMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default socialMediaMetrics;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 20, top: 20, right: 20, bottom: 20 };\nconst height = 600 - margin.top - margin.bottom;\nconst width = 700 - margin.left - margin.right;\n\n//setup the simulation for the bubbles to explode from the center on data change\nconst simulation = d3\n  .forceSimulation()\n  .force(\"center\", d3.forceCenter(width / 2, height / 2))\n  .force(\"charge\", d3.forceManyBody().strength(180));\n\nclass BubbleChart extends Component {\n  state = {\n    circles: [],\n    rScale: d3.scaleLinear().range([30, 125]),\n    cScale: d3.scaleOrdinal(d3.schemePaired)\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps,prevState);\n    if (!nextProps) return null;\n    const { data } = nextProps;\n    const { rScale, cScale } = prevState;\n\n    //filter top 10\n    let sortedData = data.sort((a, b) => {\n      return b.summary.TW - a.summary.TW;\n    });\n\n    const top15 = sortedData.slice(0, 15);\n    //Update scales with new data\n    rScale.domain(d3.extent(top15, d => d.summary.TW));\n    cScale.domain(top15, d => d.metadata.asset_name);\n\n    //create data for circles\n    const circles = top15.map(data => {\n      return { name: data.metadata.asset_name, value: data.summary.TW };\n    });\n\n    return { circles };\n  }\n\n  componentDidMount() {\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n    this.renderCircles();\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  componentDidUpdate() {\n    //console.log(\"bubbleChart: componentDidUpdate\");\n    //console.log(this.state.circles);\n\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n\n    this.renderCircles();\n\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  renderCircles() {\n    //console.log(\"renderCircles\", this.state.circles);\n\n    //JOIN\n    this.node = d3\n      .select(this.refs.svgContainer)\n      .selectAll(\"g\")\n      .data(this.state.circles);\n\n    //EXIT\n    this.node.exit().remove();\n\n    //ENTER\n    this.nodeEnter = this.node.enter().append(\"g\");\n    this.circles = this.nodeEnter.append(\"circle\");\n    this.label = this.nodeEnter.append(\"text\");\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"circle\")\n      .attr(\"r\", d => this.state.rScale(d.value))\n      .attr(\"fill\", d => this.state.cScale(d.name));\n    this.node\n      .select(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"fill\", \"black\")\n      .text(d => {\n        //this is some cutting edge stuff..\n        //i didn't want to spend too much time messing with text size to fit bubbles.\n        //will refactor this when i have more time.\n        if (d.name.length > 17 && this.state.rScale(d.value) / 3 > 17)\n          return d.name.substring(0, 17);\n        return d.name.substring(0, this.state.rScale(d.value) / 3);\n      });\n  }\n\n  //update positioning of group every tick.\n  forceTick = () => {\n    this.node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  };\n\n  render() {\n    return <svg ref=\"svgContainer\" width={width} height={height} />;\n  }\n}\n\nexport default BubbleChart;\n","import React from \"react\";\nimport BubbleChart from \"../../components/BubbleChart/BubbleChart\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport \"./TrackMetrics.css\";\n\nconst trackMetrics = props => {\n  let circleData = null;\n  let content = null;\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  if (props.trackMetrics) {\n    circleData = props.getTrackData();\n    content = (\n      <>\n        <BubbleChart data={circleData} />\n        <button onClick={props.handleBubbles}>Change Bubbles</button>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"trackSpins\" className=\"TrackMetrics\">\n      <div className=\"TrackMetrics__label\">\n        <span>Track Spins</span>\n      </div>\n      <div className=\"TrackMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default trackMetrics;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport debounce from \"lodash/debounce\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport ArtistInfo from \"./containers/ArtistInfo/ArtistInfo\";\nimport SocialMediaMetrics from \"./containers/SocialMediaMetrics/SocialMediaMetrics\";\nimport TrackMetrics from \"./containers/TrackMetrics/TrackMetrics\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  state = {\n    artist: \"\",\n    artistId: \"\",\n    artistInfo: null,\n    metrics: null,\n    metricMetadata: null,\n    metricId: 41,\n    trackMetricId: 411,\n    trackMetrics: null,\n    startDate: moment(new Date())\n      .subtract(5, \"y\")\n      .unix(),\n    endDate: moment(new Date()).unix(),\n    bubbleData: [],\n    isLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.emitDebouncedSearch = debounce(this.handleArtistSearch, 500);\n  }\n  //Search Artis Event Handlers\n  handleArtistChange = event => {\n    this.emitDebouncedSearch(event.target.value);\n  };\n  handleArtistSearch = val => {\n    this.setState({ artist: val });\n  };\n\n  componentDidMount() {\n    this.grabMetricMetadata();\n    if (this.state.artist) {\n      this.grabArtistMetric();\n      //this.grabArtistInfo();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Only update artist data if new entry is not blank or different from prev entry\n    if (this.state.artist) {\n      if (this.state.artist !== prevState.artist) {\n        this.grabArtistMetric();\n        //this.grabArtistInfo();\n      }\n    }\n  }\n\n  resetArtistInfo() {\n    this.setState({ trackMetrics: null, metrics: null, artistInfo: null });\n  }\n\n  //Grabs the metric meta data.\n  grabMetricMetadata() {\n    axios\n      .get(\"metrics/?fields=items.*\")\n      .then(response => {\n        this.setState({ metricMetadata: response.data });\n      })\n      .catch(error => console.log(error, \"grabMetricMetadata\"));\n  }\n\n  //method to grab artist metrics.\n  grabArtistMetric() {\n    //Grab 5 years of data\n    const startDate = moment(new Date())\n      .subtract(5, \"y\")\n      .format(\"YYYY-MM-DD\");\n    const endDate = moment(new Date()).format(\"YYYY-MM-DD\");\n\n    //API searches for one artist.\n    axios\n      .get(`search/v1/artists/?query=${this.state.artist}&limit=1`)\n      .then(response => {\n        if (!response.data.artists.length) return null;\n\n        //When searching for new artist. Set is loaded to true. Add spinner bars for each section.\n        this.setState({ isLoaded: true });\n        this.resetArtistInfo();\n\n        //Set state for artist info.\n        const artistInfo = response.data.artists[0];\n        this.setState({ artistId: artistInfo.id });\n\n        //grab Track metrics\n        this.grabTrackMetrics();\n\n        //grab artist info\n        this.grabArtistInfo();\n\n        //set metrics to null when searching for new artist metrics;\n        this.setState({ metrics: null });\n        //Grabs Social Media Metrics\n        //id: 28, 41, 11, 151, 247\n        return axios.get(\n          `artists/${\n            artistInfo.id\n          }/data?metricIds=28,41,11,151,247&startDate=${startDate}&endDate=${endDate}&timeseries=totals,deltas`\n        );\n      })\n      .then(response => {\n        if (response) {\n          this.setState({\n            metrics: response.data,\n            metricId: response.data.data[0].metricId\n          });\n          //console.log(\"metrics\", response.data);\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistMetric\"));\n  }\n\n  //Grabs Artist Info\n  grabArtistInfo() {\n    //set artist info to null when searching for new artist info.\n    this.setState({ artistInfo: null });\n\n    axios\n      .get(`artists/${this.state.artistId}/`)\n      .then(response => {\n        if (response) {\n          //console.log(\"artistinfo\", response.data);\n          this.setState({ artistInfo: response.data });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistInfo\"));\n  }\n\n  //Grab Artist Track Metrics\n  grabTrackMetrics() {\n    //set track Metrics to null when searching new metrics.\n    this.setState({ trackMetrics: null });\n\n    axios\n      .get(`metrics/v1/entity/${this.state.artistId}/nestedAssets?metric=410`)\n      .then(response => {\n        console.log(\"track metric\", response.data);\n        //if theres no track metrics. API returns empty array. set trackMetrics state null\n        if (!response.data.data) {\n          this.setState({ trackMetrics: null });\n        } else {\n          this.setState({ trackMetrics: response.data });\n        }\n      })\n      .catch(error => console.log(error, \"grabTrackMetrics\"));\n  }\n\n  //Filters through an array of metric arrays and returns matching metric ID to pass to barChart component.\n  getChartData = id => {\n    const dataArr = this.state.metrics.data.filter(item => {\n      return item.metricId === id;\n    });\n\n    //if data exists for metric id. grab deltas or totals\n    //refactor this code to create data with both deltas and totals. -AWOO\n    if (dataArr.length) {\n      let data;\n      if (id === 41 || id === 247) {\n        data = dataArr[0].timeseries.deltas;\n      } else {\n        data = dataArr[0].timeseries.totals;\n      }\n      const chartData = Object.keys(data).map(keys => {\n        return { date: new Date(keys), value: data[keys] };\n      });\n\n      return chartData;\n    }\n  };\n\n  //get clean track data.\n  getTrackData = () => {\n    //redo this.\n    if (this.state.trackMetrics) {\n      return this.state.trackMetrics.data.filter(data => {\n        return data.summary.TW;\n      });\n    }\n  };\n\n  handleMetricIdChange = id => {\n    if (this.state.metricId !== id) {\n      this.setState({ metricId: id });\n    }\n  };\n\n  onRangeChange = e => {\n    //manage dates with moment js. convert to unix time format. set state for endDate-startDate\n    if (this.state.startDate !== e[0] || this.state.endDate !== e[1]) {\n      this.setState({ startDate: e[0], endDate: e[1] });\n    }\n  };\n\n  //TODO - Bubble Handler\n  handleBubbles = () => {\n    this.setState({ bubbleData: [] });\n  };\n\n  render() {\n    let {\n      artistInfo,\n      metrics,\n      metricId,\n      metricMetadata,\n      trackMetrics,\n      isLoaded,\n      startDate,\n      endDate\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <NavigationBar handleArtistChange={this.handleArtistChange} />\n\n          {isLoaded ? (\n            <>\n              <ArtistInfo artistInfo={artistInfo} isLoaded={isLoaded} />\n\n              <SocialMediaMetrics\n                isLoaded={isLoaded}\n                metrics={metrics}\n                onRangeChange={this.onRangeChange}\n                handleMetricIdChange={this.handleMetricIdChange}\n                metricMetadata={metricMetadata}\n                getChartData={this.getChartData}\n                metricId={metricId}\n                startDate={startDate}\n                endDate={endDate}\n              />\n\n              <TrackMetrics\n                isLoaded={isLoaded}\n                trackMetrics={trackMetrics}\n                getTrackData={this.getTrackData}\n                handleBubbles={this.handleBubbles}\n              />\n            </>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nconst publicKey = \"eb74a82009cbc53c9b44866743633f9d\";\n\naxios.defaults.baseURL = \"https://api.nextbigsound.com/\";\naxios.defaults.params = {};\naxios.defaults.params[\"access_token\"] = publicKey;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}