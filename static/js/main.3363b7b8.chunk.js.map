{"version":3,"sources":["components/MetricViewBar/MetricViewBar.js","components/NavigationBar/NavigationBar.js","components/ArtistInfo/ArtistInfo.js","components/BarChart/Rect/Rect.js","components/BarChart/BarChart.js","components/SocialMediaMetrics/SocialMediaMetrics.js","components/BubbleChart/BubbleChart.js","App.js","index.js"],"names":["metricViewBar","props","buttons","metricNames","map","obj","react_default","a","createElement","key","id","onClick","clicked","bind","fullName","className","navigationBar","type","placeholder","onChange","handleArtistChange","href","artistInfo","image","info","genre","height","src","images","alt","name","genres","join","style","textAlign","Rect","state","x","y","width","fill","_this$state","this","yExtent","d3","refs","rect","attr","yScale","transition","duration","_this$state2","ref","nextProps","prevState","Component","margin","BarChart","bars","xScale","range","wScale","paddingInner","paddingOuter","accentScale","xAxis","_this","tickFormat","yAxis","nextState","call","console","log","_this2","transform","concat","d","i","BarChart_Rect_Rect","bandwidth","data","domain","date","value","socialMediaMetrics","barChart","Fragment","components_BarChart_BarChart","Range_default","defaultValue","min","max","allowCross","onRangeChange","simulation","force","strength","BubbleChart","circles","rScale","cScale","forceTick","node","radius","on","renderCircles","nodes","alpha","restart","_this3","_this4","svgContainer","selectAll","exit","remove","nodeEnter","enter","append","label","merge","select","text","length","substring","top15","sort","b","summary","TW","slice","metadata","asset_name","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","artist","artistId","metrics","metricMetadata","metricId","trackMetricId","trackMetrics","startDate","moment","format","endDate","bubbleData","event","emitDebouncedSearch","target","handleArtistSearch","val","setState","getChartData","dataArr","filter","item","timeseries","deltas","totals","keys","Date","getTrackData","handleMetricIdChange","e","handleBubbles","Math","random","debounce","grabMetricMetadata","grabArtistMetric","prevProps","axios","get","then","response","catch","error","artists","grabTrackMetrics","grabArtistInfo","_this5","bubbleChart","circleData","reduce","acc","metric","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","items","Symbol","iterator","next","done","m","push","err","return","components_BubbleChart_BubbleChart","NavigationBar_NavigationBar","ArtistInfo_ArtistInfo","SocialMediaMetrics_SocialMediaMetrics","onRangeChang","MetricViewBar_MetricViewBar","defaults","baseURL","params","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"sTAmBeA,UAhBO,SAAAC,GACpB,IAAIC,EAYJ,OAVID,EAAME,cACRD,EAAUD,EAAME,YAAYC,IAAI,SAAAC,GAC9B,OACEC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAIK,GAAIC,QAASV,EAAMW,QAAQC,YAAWR,EAAIK,KACxDL,EAAIS,aAMNR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBAAmBb,KCsB5Bc,UAnCO,SAAAf,GACpB,OACEK,EAAAC,EAAAC,cAAA,OAAKO,UAAU,iBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,6BACbT,EAAAC,EAAAC,cAAA,SACEE,GAAG,SACHK,UAAU,oBACVE,KAAK,OACLC,YAAY,uBACZC,SAAUlB,EAAMmB,sBAGpBd,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACbT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,qBACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,qBACZT,EAAAC,EAAAC,cAAA,KAAGa,KAAK,QAAQN,UAAU,uBAA1B,gBAIFT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,uBACZT,EAAAC,EAAAC,cAAA,KAAGa,KAAK,QAAQN,UAAU,uBAA1B,iBAIFT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,uBACZT,EAAAC,EAAAC,cAAA,KAAGa,KAAK,QAAQN,UAAU,uBAA1B,qBCFGO,UAvBI,SAAArB,GACjB,IAAIsB,EACFC,EACAC,EAAQ,KASV,OARIxB,EAAMqB,aACRC,EACEjB,EAAAC,EAAAC,cAAA,OAAKkB,OAAO,MAAMC,IAAK1B,EAAMqB,WAAWM,OAAO,GAAG,KAAMC,IAAI,WAE9DL,EAAOlB,EAAAC,EAAAC,cAAA,0BAAkBP,EAAMqB,WAAWQ,MAC1CL,EAAQnB,EAAAC,EAAAC,cAAA,oBAAYP,EAAMqB,WAAWS,OAAOC,KAAK,OAIjD1B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eACZQ,EACDjB,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAEC,UAAW,WACtBV,EACAC,aC8BMU,6MA9CbC,MAAQ,CAAEC,EAAG,KAAMC,EAAG,KAAMC,MAAO,KAAMb,OAAQ,KAAMc,KAAM,0FAcxC,IAAAC,EACGC,KAAKN,MAAnBE,EADWG,EACXH,EAAGZ,EADQe,EACRf,QAKPgB,KAAKzC,MAAM0C,QACNC,IACGF,KAAKG,KAAKC,MACjBC,KAAK,IAAKL,KAAKzC,MAAM+C,OAAON,KAAKzC,MAAM0C,QAAQ,KAE3CC,IAAUF,KAAKG,KAAKC,MAAMC,KAAK,IAAKL,KAAKzC,MAAM+C,OAAO,KAK5DD,KAAK,SAAU,GACfE,aACAC,SAAS,KACTH,KAAK,IAAKT,GACVS,KAAK,SAAUrB,oCAGX,IAAAyB,EAC+BT,KAAKN,MAAnCC,EADDc,EACCd,EAAGC,EADJa,EACIb,EAAGZ,EADPyB,EACOzB,OAAQa,EADfY,EACeZ,MAAOC,EADtBW,EACsBX,KAE7B,OACElC,EAAAC,EAAAC,cAAA,QAAM4C,IAAI,OAAOf,EAAGA,EAAGC,EAAGA,EAAGZ,OAAQA,EAAQa,MAAOA,EAAOC,KAAMA,uDAvCrCa,EAAWC,GACzC,OAAKD,EAEE,CACLhB,EAAGgB,EAAUhB,EACbC,EAAGe,EAAUf,EACbC,MAAOc,EAAUd,MACjBb,OAAQ2B,EAAU3B,OAClBc,KAAMa,EAAUb,MAPK,YAJRe,aCEbC,EAAiB,GAAjBA,EAA0B,GAA1BA,EAAqC,GAArCA,EAAiD,GACjD9B,EAAS,IAAM8B,EAAaA,EAC5BjB,EAAQ,IAAMiB,EAAcA,EAsHnBC,6MAnHbrB,MAAQ,CACNsB,KAAM,GACNC,OAAQf,MAAegB,MAAM,CAAC,EAAGrB,IACjCS,OAAQJ,MAAiBgB,MAAM,CAAClC,EAAQ,IAExCmC,OAAQjB,MAELgB,MAAM,CAAC,EAAGrB,IACVuB,aAAa,IACbC,aAAa,GAChBC,YAAapB,IAAmBA,KAChCD,QAAS,QAIXsB,MAAQrB,IAAcsB,EAAK9B,MAAMuB,QAAQQ,WAAWvB,IAAc,YAClEwB,MAAQxB,IAAYsB,EAAK9B,MAAMY,6FAsCTK,EAAWgB,GAI/B,OAAO,8CAKPzB,IAAUF,KAAKG,KAAKoB,OACjBhB,aACAC,SAAS,KACToB,KAAK5B,KAAKuB,OACbrB,IAAUF,KAAKG,KAAKuB,OACjBnB,aACAC,SAAS,KACToB,KAAK5B,KAAK0B,oDAKbG,QAAQC,IAAI,sBACZ5B,IAAUF,KAAKG,KAAKoB,OACjBhB,aACAC,SAAS,KACToB,KAAK5B,KAAKuB,OACbrB,IAAUF,KAAKG,KAAKuB,OACjBnB,aACAC,SAAS,KACToB,KAAK5B,KAAK0B,wCAGN,IAAAK,EAAA/B,KACP,OACEpC,EAAAC,EAAAC,cAAA,OACEkB,OAAQA,EAAS8B,EAAaA,EAC9BjB,MAAOA,EAAQiB,EAAcA,GAE7BlD,EAAAC,EAAAC,cAAA,KAAGkE,UAAS,aAAAC,OAAenB,EAAf,KAAAmB,OAA8BnB,EAA9B,MACTd,KAAKN,MAAMsB,KAAKtD,IAAI,SAACwE,EAAGC,GACvB,OACEvE,EAAAC,EAAAC,cAACsE,EAAD,CACErE,IAAKoE,EACLxC,EAAGuC,EAAEvC,EACLC,EAAGsC,EAAEtC,EACLZ,OAAQkD,EAAElD,OACVa,MAAOkC,EAAKrC,MAAMyB,OAAOkB,YACzBvC,KAAMoC,EAAEpC,KACRQ,OAAQyB,EAAKrC,MAAMY,WAKzB1C,EAAAC,EAAAC,cAAA,KAAG4C,IAAI,QAAQsB,UAAS,gBAAAC,OAAkBjD,EAAlB,OACxBpB,EAAAC,EAAAC,cAAA,KAAG4C,IAAI,+DAtFiBC,EAAWC,GAEzC,IAAKD,EAAW,OAAO,KAF6B,IAI5C2B,EAAS3B,EAAT2B,KAEArB,EAAwCL,EAAxCK,OAAQX,EAAgCM,EAAhCN,OAAQa,EAAwBP,EAAxBO,OAAQG,EAAgBV,EAAhBU,YAuBhC,OApBAL,EAAOsB,OAAOrC,IAAUoC,EAAM,SAAAJ,GAAC,OAAIA,EAAEM,QACrClC,EAAOiC,OAAO,CAAC,EAAGrC,IAAOoC,EAAM,SAAAJ,GAAC,OAAIA,EAAEO,UAMtCtB,EAAOoB,OAAOD,EAAK5E,IAAI,SAAAwE,GAAC,OAAIA,EAAEM,QAC9BlB,EAAYiB,OAAO,CAACrC,IAAOoC,EAAM,SAAAJ,GAAC,OAAIA,EAAEO,QAAQ,IAYzC,CAAEzB,KATIsB,EAAK5E,IAAI,SAAAwE,GACpB,MAAO,CACLvC,EAAGsB,EAAOiB,EAAEM,MACZ5C,EAAGU,EAAO4B,EAAEO,OACZzD,OAAQA,EAASsB,EAAO4B,EAAEO,OAC1B3C,KAAMwB,EAAYY,EAAEO,UAITnC,iBApDIO,8BCkBR6B,iBArBY,SAAAnF,GACzB,IAAIoF,EAAW,KAiBf,OAhBIpF,EAAM+E,OAERK,EACE/E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAAC+E,EAAD,CAAUP,KAAM/E,EAAM+E,OACtB1E,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CACEQ,UAAU,eACV0E,aAAc,CAAC,EAAG,IAClBC,IAAK,EACLC,IAAK,GACLC,YAAY,EACZzE,SAAUlB,EAAM4F,kBAKjBR,ICnBH3D,EAAS,IADiB,GAAuB,GAEjDa,EAAQ,IAFS,GAAoB,GAKrCuD,EAAalD,MAEhBmD,MAAM,SAAUnD,IAAeL,EAAQ,EAAGb,EAAS,IACnDqE,MAAM,SAAUnD,MAAmBoD,SAAS,MAgHhCC,6MA7Gb7D,MAAQ,CACN8D,QAAS,GACTC,OAAQvD,MAAiBgB,MAAM,CAAC,GAAI,MACpCwC,OAAQxD,IAAgBA,QAiG1ByD,UAAY,WACVnC,EAAKoC,KAAKvD,KAAK,YAAa,SAAA6B,GAAC,mBAAAD,OAAiBC,EAAEvC,EAAnB,MAAAsC,OAAyBC,EAAEtC,EAA3B,2FAvEX,IAAAmC,EAAA/B,KAClBoD,EACGC,MACC,YACAnD,MAAkB2D,OAAO,SAAA3B,GAAC,OAAIH,EAAKrC,MAAM+D,OAAOvB,EAAEO,UAEnDqB,GAAG,OAAQ9D,KAAK2D,WACnB3D,KAAK+D,gBACLX,EACGY,MAAMhE,KAAKN,MAAM8D,SACjBS,MAAM,IACNC,uDAGgB,IAAAC,EAAAnE,KAInBoD,EACGC,MACC,YACAnD,MAAkB2D,OAAO,SAAA3B,GAAC,OAAIiC,EAAKzE,MAAM+D,OAAOvB,EAAEO,UAEnDqB,GAAG,OAAQ9D,KAAK2D,WAEnB3D,KAAK+D,gBAELX,EACGY,MAAMhE,KAAKN,MAAM8D,SACjBS,MAAM,IACNC,kDAGW,IAAAE,EAAApE,KAIdA,KAAK4D,KAAO1D,IACFF,KAAKG,KAAKkE,cACjBC,UAAU,KACVhC,KAAKtC,KAAKN,MAAM8D,SAGnBxD,KAAK4D,KAAKW,OAAOC,SAGjBxE,KAAKyE,UAAYzE,KAAK4D,KAAKc,QAAQC,OAAO,KAC1C3E,KAAKwD,QAAUxD,KAAKyE,UAAUE,OAAO,UACrC3E,KAAK4E,MAAQ5E,KAAKyE,UAAUE,OAAO,QAGnC3E,KAAK4D,KAAO5D,KAAKyE,UAAUI,MAAM7E,KAAK4D,MACtC5D,KAAK4D,KACFkB,OAAO,UACPzE,KAAK,IAAK,SAAA6B,GAAC,OAAIkC,EAAK1E,MAAM+D,OAAOvB,EAAEO,SACnCpC,KAAK,OAAQ,SAAA6B,GAAC,OAAIkC,EAAK1E,MAAMgE,OAAOxB,EAAE9C,QACzCY,KAAK4D,KACFkB,OAAO,QACPzE,KAAK,cAAe,UACpBA,KAAK,YAAa,SAAA6B,GAAC,OAAIkC,EAAK1E,MAAM+D,OAAOvB,EAAEO,OAAS,IACpDpC,KAAK,OAAQ,SACb0E,KAAK,SAAA7C,GAEJ,OAAIA,EAAE9C,KAAK4F,OAAS,IAAMZ,EAAK1E,MAAM+D,OAAOvB,EAAEO,OAAS,EAAI,GAClDP,EAAE9C,KAAK6F,UAAU,EAAG,IACtB/C,EAAE9C,KAAK6F,UAAU,EAAGb,EAAK1E,MAAM+D,OAAOvB,EAAEO,OAAS,sCAU5D,OAAO7E,EAAAC,EAAAC,cAAA,OAAK4C,IAAI,eAAeb,MAAOA,EAAOb,OAAQA,uDAnGvB2B,EAAWC,GAEzC,IAAKD,EAAW,OAAO,KAF6B,IAG5C2B,EAAS3B,EAAT2B,KACAmB,EAAmB7C,EAAnB6C,OAAQC,EAAW9C,EAAX8C,OAOVwB,EAJW5C,EAAK6C,KAAK,SAACtH,EAAGuH,GAC7B,OAAOA,EAAEC,QAAQC,GAAKzH,EAAEwH,QAAQC,KAGTC,MAAM,EAAG,IAUlC,OARA9B,EAAOlB,OAAOrC,IAAUgF,EAAO,SAAAhD,GAAC,OAAIA,EAAEmD,QAAQC,MAC9C5B,EAAOnB,OAAO2C,EAAO,SAAAhD,GAAC,OAAIA,EAAEsD,SAASC,aAO9B,CAAEjC,QAJO0B,EAAMxH,IAAI,SAAA4E,GACxB,MAAO,CAAElD,KAAMkD,EAAKkD,SAASC,WAAYhD,MAAOH,EAAK+C,QAAQC,cAzBzCzE,8BC2OX6E,cA/Nb,SAAAA,IAAc,IAAAlE,EAAA,OAAAmE,OAAAC,EAAA,EAAAD,CAAA3F,KAAA0F,IACZlE,EAAAmE,OAAAE,EAAA,EAAAF,CAAA3F,KAAA2F,OAAAG,EAAA,EAAAH,CAAAD,GAAA9D,KAAA5B,QAfFN,MAAQ,CACNqG,OAAQ,GACRC,SAAU,GACVpH,WAAY,KACZqH,QAAS,KACTC,eAAgB,KAChBC,SAAU,GACVC,cAAe,IACfC,aAAc,KACdC,UAAWC,IAAO,cAAcC,OAAO,cACvCC,QAASF,IAAO,cAAcC,OAAO,cACrCE,WAAY,IAGAlF,EAKd9C,mBAAqB,SAAAiI,GACnBnF,EAAKoF,oBAAoBD,EAAME,OAAOpE,QAN1BjB,EAQdsF,mBAAqB,SAAAC,GACnBvF,EAAKwF,SAAS,CAAEjB,OAAQgB,KATZvF,EAkGdyF,aAAe,SAAAjJ,GAEb,IAOMsE,EAPA4E,EAAU1F,EAAK9B,MAAMuG,QAAQ3D,KAAK6E,OAAO,SAAAC,GAC7C,OAAOA,EAAKjB,WAAanI,IAK3B,GAAIkJ,EAAQlC,OAWV,OARE1C,EADS,KAAPtE,GAAoB,MAAPA,EACRkJ,EAAQ,GAAGG,WAAWC,OAEtBJ,EAAQ,GAAGG,WAAWE,OAEb5B,OAAO6B,KAAKlF,GAAM5E,IAAI,SAAA8J,GACtC,MAAO,CAAEhF,KAAM,IAAIiF,KAAKD,GAAO/E,MAAOH,EAAKkF,OAlHnChG,EA0HdkG,aAAe,WAGb,GAFA7F,QAAQC,IAAIN,EAAK9B,MAAM2G,aAAc7E,EAAK9B,MAAM2G,aAAarB,QAEzDxD,EAAK9B,MAAM2G,cACT7E,EAAK9B,MAAM2G,aAAa/D,KAAK0C,OAC/B,OAAOxD,EAAK9B,MAAM2G,aAAa/D,KAAK6E,OAAO,SAAA7E,GACzC,OAAOA,EAAK+C,QAAQC,MAhId9D,EAsIdmG,qBAAuB,SAAA3J,GACjBwD,EAAK9B,MAAMyG,WAAanI,GAC1BwD,EAAKwF,SAAS,CAAEb,SAAUnI,KAxIhBwD,EA6Id2B,cAAgB,SAAAyE,GACd/F,QAAQC,IAAI8F,IA9IApG,EAkJdqG,cAAgB,WACdrG,EAAKwF,SAAS,CACZN,WAAY,CACV,CAAEtH,KAAM,YAAayE,OAAwB,GAAhBiE,KAAKC,SAAgB,IAClD,CAAE3I,KAAM,mBAAoByE,OAAwB,GAAhBiE,KAAKC,SAAgB,IACzD,CAAE3I,KAAM,OAAQyE,OAAwB,GAAhBiE,KAAKC,SAAgB,IAC7C,CAAE3I,KAAM,OAAQyE,OAAwB,GAAhBiE,KAAKC,SAAgB,IAC7C,CAAE3I,KAAM,SAAUyE,OAAwB,GAAhBiE,KAAKC,SAAgB,IAC/C,CAAE3I,KAAM,OAAQyE,OAAwB,GAAhBiE,KAAKC,SAAgB,QAxJjDvG,EAAKoF,oBAAsBoB,IAASxG,EAAKsF,mBAAoB,KAFjDtF,mFAaZxB,KAAKiI,qBACDjI,KAAKN,MAAMqG,QACb/F,KAAKkI,8DAKUC,EAAWvH,GAExBZ,KAAKN,MAAMqG,QACT/F,KAAKN,MAAMqG,SAAWnF,EAAUmF,QAClC/F,KAAKkI,gEAOU,IAAAnG,EAAA/B,KACnBoI,IACGC,IAAI,2BACJC,KAAK,SAAAC,GACJxG,EAAKiF,SAAS,CAAEd,eAAgBqC,EAASjG,SAE1CkG,MAAM,SAAAC,GAAK,OAAI5G,QAAQC,IAAI2G,EAAO,mEAKpB,IAAAtE,EAAAnE,KACjBoI,IACGC,IADH,4BAAApG,OACmCjC,KAAKN,MAAMqG,OAD9C,aAEGuC,KAAK,SAAAC,GACJ,IAAKA,EAASjG,KAAKoG,QAAQ1D,OAAQ,OAAO,KAC1C,IAAMpG,EAAa2J,EAASjG,KAAKoG,QAAQ,GASzC,OARAvE,EAAK6C,SAAS,CAAEhB,SAAUpH,EAAWZ,KAGrCmG,EAAKwE,mBAGLxE,EAAKyE,iBAEER,IAAMC,IAAN,WAAApG,OACMrD,EAAWZ,GADjB,+CAAAiE,OAEHkC,EAAKzE,MAAM4G,UAFR,aAAArE,OAGOkC,EAAKzE,MAAM+G,QAHlB,gCAMR6B,KAAK,SAAAC,GACAA,GACFpE,EAAK6C,SAAS,CACZf,QAASsC,EAASjG,KAClB6D,SAAUoC,EAASjG,KAAKA,KAAK,GAAG6D,aAKrCqC,MAAM,SAAAC,GAAK,OAAI5G,QAAQC,IAAI2G,EAAO,+DAItB,IAAArE,EAAApE,KACfoI,IACGC,IADH,WAAApG,OACkBjC,KAAKN,MAAMsG,SAD7B,MAEGsC,KAAK,SAAAC,GACAA,GAEFnE,EAAK4C,SAAS,CAAEpI,WAAY2J,EAASjG,SAGxCkG,MAAM,SAAAC,GAAK,OAAI5G,QAAQC,IAAI2G,EAAO,+DAIpB,IAAAI,EAAA7I,KACjBoI,IACGC,IADH,qBAAApG,OAC4BjC,KAAKN,MAAMsG,SADvC,6BAEGsC,KAAK,SAAAC,GACJ1G,QAAQC,IAAI,eAAgByG,EAASjG,MACrCuG,EAAK7B,SAAS,CAAEX,aAAckC,EAASjG,SAExCkG,MAAM,SAAAC,GAAK,OAAI5G,QAAQC,IAAI2G,EAAO,uDAgE9B,IASHhL,EAAa6E,EAAMwG,EAAaC,EAT7BhJ,EAOHC,KAAKN,MALPd,EAFKmB,EAELnB,WACAqH,EAHKlG,EAGLkG,QACAE,EAJKpG,EAILoG,SACAD,EALKnG,EAKLmG,eACAG,EANKtG,EAMLsG,aAqCF,OA/BIJ,IACF3D,EAAOtC,KAAKiH,aAAad,GAGzB1I,EAAcwI,EAAQ3D,KACnB0G,OAAO,SAACC,EAAKC,GAAW,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACvB,QAAAC,EAAAC,EAActD,EAAeuD,MAA7BC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAoC,KAA3BW,EAA2BP,EAAA9G,MAClC,GAAIqH,EAAE9L,KAAOkL,EAAO/C,SAAU,CAC5B8C,EAAIc,KAAK,CAAE3L,SAAU0L,EAAE1L,SAAUJ,GAAI8L,EAAE9L,KACvC,QAJmB,MAAAgM,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAOvB,OAAOJ,GACN,IACF9D,KAAK,SAACtH,EAAGuH,GACR,OAAOvH,EAAEG,GAAKoH,EAAEpH,MAIlBqI,IAEF0C,EAAa/I,KAAK0H,eAClB7F,QAAQC,IAAI,OAAQiH,GACpBD,EACElL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAACoM,EAAD,CAAa5H,KAAMyG,IACnBnL,EAAAC,EAAAC,cAAA,UAAQG,QAAS+B,KAAK6H,eAAtB,oBAMJjK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+E,SAAA,KACEhF,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACqM,EAAD,CAAezL,mBAAoBsB,KAAKtB,qBAExCd,EAAAC,EAAAC,cAACsM,EAAD,CAAYxL,WAAYA,IAEvBkK,EAEDlL,EAAAC,EAAAC,cAACuM,EAAD,CAAoB/H,KAAMA,EAAMgI,aAActK,KAAKmD,gBAEnDvF,EAAAC,EAAAC,cAACyM,EAAD,CACErM,QAAS8B,KAAK2H,qBACdlK,YAAaA,aAtOPoD,aCHlBuH,IAAMoC,SAASC,QAAU,gCACzBrC,IAAMoC,SAASE,OAAS,GACxBtC,IAAMoC,SAASE,OAAf,aAJkB,mCAMlBC,IAASC,OAAOhN,EAAAC,EAAAC,cAAC+M,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3363b7b8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MetricViewBar.css\";\n\nconst metricViewBar = props => {\n  let buttons;\n\n  if (props.metricNames) {\n    buttons = props.metricNames.map(obj => {\n      return (\n        <button key={obj.id} onClick={props.clicked.bind(this, obj.id)}>\n          {obj.fullName}\n        </button>\n      );\n    });\n  }\n\n  return <div className=\"metric-view-bar\">{buttons}</div>;\n};\n\nexport default metricViewBar;\n","import React from \"react\";\nimport \"./NavigationBar.css\";\n\nconst navigationBar = props => {\n  return (\n    <nav className=\"NavigationBar\">\n      <div className=\"NavigationBar__search-bar\">\n        <input\n          id=\"search\"\n          className=\"artistSearchInput\"\n          type=\"text\"\n          placeholder=\"Search For An Artist\"\n          onChange={props.handleArtistChange}\n        />\n      </div>\n      <div className=\"NavigationBar__links\">\n        <ul className=\"NavigationBar__ul\">\n          <li className=\"NavigationBar__li\">\n            <a href=\"#info\" className=\"NavigationBar__href\">\n              Artist Info\n            </a>\n          </li>\n          <li className=\"NavigationBar__link\">\n            <a href=\"#info\" className=\"NavigationBar__href\">\n              Social Media\n            </a>\n          </li>\n          <li className=\"NavigationBar__link\">\n            <a href=\"#info\" className=\"NavigationBar__href\">\n              Track Spins\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default navigationBar;\n","import React from \"react\";\nimport \"./ArtistInfo.css\";\n\nconst artistInfo = props => {\n  let image,\n    info,\n    genre = null;\n  if (props.artistInfo) {\n    image = (\n      <img height=\"100\" src={props.artistInfo.images[0][100]} alt=\"Artist\" />\n    );\n    info = <h1>Artist Name: {props.artistInfo.name}</h1>;\n    genre = <h2>Genre: {props.artistInfo.genres.join(\" \")}</h2>;\n  }\n\n  return (\n    <div className=\"artist-info\">\n      {image}\n      <div style={{ textAlign: \"center\" }}>\n        {info}\n        {genre}\n      </div>\n    </div>\n  );\n};\n\nexport default artistInfo;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Rect extends Component {\n  state = { x: null, y: null, width: null, height: null, fill: null };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    return {\n      x: nextProps.x,\n      y: nextProps.y,\n      width: nextProps.width,\n      height: nextProps.height,\n      fill: nextProps.fill\n    };\n  }\n\n  componentDidUpdate() {\n    const { y, height } = this.state;\n\n    let rect;\n\n    //if log scale use yExtent, if not use linear scale from range 0\n    if (this.props.yExtent) {\n      rect = d3\n        .select(this.refs.rect)\n        .attr(\"y\", this.props.yScale(this.props.yExtent[0]));\n    } else {\n      rect = d3.select(this.refs.rect).attr(\"y\", this.props.yScale(0));\n    }\n\n    //set up bar transition\n    rect\n      .attr(\"height\", 0)\n      .transition()\n      .duration(800)\n      .attr(\"y\", y)\n      .attr(\"height\", height);\n  }\n\n  render() {\n    const { x, y, height, width, fill } = this.state;\n\n    return (\n      <rect ref=\"rect\" x={x} y={y} height={height} width={width} fill={fill} />\n    );\n  }\n}\n\nexport default Rect;\n","import React, { Component } from \"react\";\nimport Rect from \"./Rect/Rect\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 60, top: 20, right: 20, bottom: 50 };\nconst height = 500 - margin.top - margin.bottom;\nconst width = 700 - margin.left - margin.right;\n\nclass BarChart extends Component {\n  state = {\n    bars: [],\n    xScale: d3.scaleTime().range([0, width]),\n    yScale: d3.scaleLinear().range([height, 0]),\n    //yScale: d3.scaleLog().range([height, 0]),\n    wScale: d3\n      .scaleBand()\n      .range([0, width])\n      .paddingInner(0.1)\n      .paddingOuter(0),\n    accentScale: d3.scaleSequential(d3.interpolateRdBu),\n    yExtent: null\n  };\n\n  //setting up axis and tick formats\n  xAxis = d3.axisBottom(this.state.xScale).tickFormat(d3.timeFormat(\"%b-%Y\"));\n  yAxis = d3.axisLeft(this.state.yScale);\n  //.ticks(4)\n  //.tickFormat(function(d) {\n  // return d;\n  //});\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps, !nextProps);\n    if (!nextProps) return null;\n\n    const { data } = nextProps;\n    //console.log(data);\n    const { xScale, yScale, wScale, accentScale } = prevState;\n\n    //recalculate scales with new data\n    xScale.domain(d3.extent(data, d => d.date));\n    yScale.domain([0, d3.max(data, d => d.value)]);\n\n    //Below is yscale for log\n    //const yExtent = d3.extent(data, d => d.value);\n    //yScale.domain(d3.extent(data, d => d.value));\n\n    wScale.domain(data.map(d => d.date));\n    accentScale.domain([d3.max(data, d => d.value), 0]);\n\n    //create rect x and y values.\n    const bars = data.map(d => {\n      return {\n        x: xScale(d.date),\n        y: yScale(d.value),\n        height: height - yScale(d.value),\n        fill: accentScale(d.value)\n      };\n    });\n\n    return { bars, yScale };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //console.log(\"shouldComponentUpdate: this.state =\", this.state);\n    //console.log(\"shouldComponentUpdate: nextSate =\", nextState);\n    //console.log(this.state.bars !== nextState.bars);\n    return true;\n  }\n\n  //happens once. render x and y axis on loadup.\n  componentDidMount() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis);\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  //update axis when component updates\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate\");\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis);\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  render() {\n    return (\n      <svg\n        height={height + margin.top + margin.bottom}\n        width={width + margin.left + margin.right}\n      >\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          {this.state.bars.map((d, i) => {\n            return (\n              <Rect\n                key={i}\n                x={d.x}\n                y={d.y}\n                height={d.height}\n                width={this.state.wScale.bandwidth()}\n                fill={d.fill}\n                yScale={this.state.yScale}\n                // yExtent={this.state.yExtent}\n              />\n            );\n          })}\n          <g ref=\"xAxis\" transform={`translate(0, ${height})`} />\n          <g ref=\"yAxis\" />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport BarChart from \"../BarChart/BarChart\";\nimport Range from \"rc-slider/lib/Range\";\nimport \"rc-slider/assets/index.css\";\nimport \"./SocialMediaMetrics.css\";\n\nconst socialMediaMetrics = props => {\n  let barChart = null;\n  if (props.data) {\n    // populate barchart with data\n    barChart = (\n      <>\n        <BarChart data={props.data} />\n        <Range\n          className=\"range-slider\"\n          defaultValue={[0, 10]}\n          min={0}\n          max={10}\n          allowCross={false}\n          onChange={props.onRangeChange}\n        />\n      </>\n    );\n  }\n  return barChart;\n};\n\nexport default socialMediaMetrics;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 20, top: 20, right: 20, bottom: 20 };\nconst height = 600 - margin.top - margin.bottom;\nconst width = 700 - margin.left - margin.right;\n\n//setup the simulation for the bubbles to explode from the center on data change\nconst simulation = d3\n  .forceSimulation()\n  .force(\"center\", d3.forceCenter(width / 2, height / 2))\n  .force(\"charge\", d3.forceManyBody().strength(180));\n\nclass BubbleChart extends Component {\n  state = {\n    circles: [],\n    rScale: d3.scaleLinear().range([30, 130]),\n    cScale: d3.scaleOrdinal(d3.schemePaired)\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps,prevState);\n    if (!nextProps) return null;\n    const { data } = nextProps;\n    const { rScale, cScale } = prevState;\n\n    //filter top 10\n    let sortedData = data.sort((a, b) => {\n      return b.summary.TW - a.summary.TW;\n    });\n\n    const top15 = sortedData.slice(0, 15);\n    //Update scales with new data\n    rScale.domain(d3.extent(top15, d => d.summary.TW));\n    cScale.domain(top15, d => d.metadata.asset_name);\n\n    //create data for circles\n    const circles = top15.map(data => {\n      return { name: data.metadata.asset_name, value: data.summary.TW };\n    });\n\n    return { circles };\n  }\n\n  componentDidMount() {\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n    this.renderCircles();\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  componentDidUpdate() {\n    //console.log(\"bubbleChart: componentDidUpdate\");\n    //console.log(this.state.circles);\n\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n\n    this.renderCircles();\n\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  renderCircles() {\n    //console.log(\"renderCircles\", this.state.circles);\n\n    //JOIN\n    this.node = d3\n      .select(this.refs.svgContainer)\n      .selectAll(\"g\")\n      .data(this.state.circles);\n\n    //EXIT\n    this.node.exit().remove();\n\n    //ENTER\n    this.nodeEnter = this.node.enter().append(\"g\");\n    this.circles = this.nodeEnter.append(\"circle\");\n    this.label = this.nodeEnter.append(\"text\");\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"circle\")\n      .attr(\"r\", d => this.state.rScale(d.value))\n      .attr(\"fill\", d => this.state.cScale(d.name));\n    this.node\n      .select(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"fill\", \"black\")\n      .text(d => {\n        //this is some crazy stuff.. i didn't want to spend too much time messing with text size to fit bubbles.\n        if (d.name.length > 17 && this.state.rScale(d.value) / 3 > 17)\n          return d.name.substring(0, 17);\n        return d.name.substring(0, this.state.rScale(d.value) / 3);\n      });\n  }\n\n  //update positioning of group every tick.\n  forceTick = () => {\n    this.node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  };\n\n  render() {\n    return <svg ref=\"svgContainer\" width={width} height={height} />;\n  }\n}\n\nexport default BubbleChart;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport debounce from \"lodash/debounce\";\nimport MetricViewBar from \"./components/MetricViewBar/MetricViewBar\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport ArtistInfo from \"./components/ArtistInfo/ArtistInfo\";\nimport SocialMediaMetrics from \"./components/SocialMediaMetrics/SocialMediaMetrics\";\nimport BubbleChart from \"./components/BubbleChart/BubbleChart\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  state = {\n    artist: \"\",\n    artistId: \"\",\n    artistInfo: null,\n    metrics: null,\n    metricMetadata: null,\n    metricId: 41,\n    trackMetricId: 411,\n    trackMetrics: null,\n    startDate: moment(\"2018-01-01\").format(\"YYYY-MM-DD\"),\n    endDate: moment(\"2018-12-31\").format(\"YYYY-MM-DD\"),\n    bubbleData: []\n  };\n\n  constructor() {\n    super();\n    this.emitDebouncedSearch = debounce(this.handleArtistSearch, 500);\n  }\n  //Search Artis Event Handlers\n  handleArtistChange = event => {\n    this.emitDebouncedSearch(event.target.value);\n  };\n  handleArtistSearch = val => {\n    this.setState({ artist: val });\n  };\n\n  componentDidMount() {\n    this.grabMetricMetadata();\n    if (this.state.artist) {\n      this.grabArtistMetric();\n      //this.grabArtistInfo();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Only update artist data if new entry is not blank or different from prev entry\n    if (this.state.artist) {\n      if (this.state.artist !== prevState.artist) {\n        this.grabArtistMetric();\n        //this.grabArtistInfo();\n      }\n    }\n  }\n\n  //Grabs the metric meta data.\n  grabMetricMetadata() {\n    axios\n      .get(\"metrics/?fields=items.*\")\n      .then(response => {\n        this.setState({ metricMetadata: response.data });\n      })\n      .catch(error => console.log(error, \"grabMetricMetadata\"));\n  }\n\n  //Grabs Social Media Metrics\n  //id: 28, 41, 11, 151, 247\n  grabArtistMetric() {\n    axios\n      .get(`search/v1/artists/?query=${this.state.artist}&limit=1`)\n      .then(response => {\n        if (!response.data.artists.length) return null;\n        const artistInfo = response.data.artists[0];\n        this.setState({ artistId: artistInfo.id });\n\n        //grab Track metrics\n        this.grabTrackMetrics();\n\n        //grab artist info\n        this.grabArtistInfo();\n\n        return axios.get(\n          `artists/${artistInfo.id}/data?metricIds=28,41,11,151,247&startDate=${\n            this.state.startDate\n          }&endDate=${this.state.endDate}&timeseries=totals,deltas`\n        );\n      })\n      .then(response => {\n        if (response) {\n          this.setState({\n            metrics: response.data,\n            metricId: response.data.data[0].metricId\n          });\n          //console.log(\"metrics\", response.data);\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistMetric\"));\n  }\n\n  //Grabs Artist Info\n  grabArtistInfo() {\n    axios\n      .get(`artists/${this.state.artistId}/`)\n      .then(response => {\n        if (response) {\n          //console.log(\"artistinfo\", response.data);\n          this.setState({ artistInfo: response.data });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistInfo\"));\n  }\n\n  //Grab Artist Track Metrics\n  grabTrackMetrics() {\n    axios\n      .get(`metrics/v1/entity/${this.state.artistId}/nestedAssets?metric=410`)\n      .then(response => {\n        console.log(\"track metric\", response.data);\n        this.setState({ trackMetrics: response.data });\n      })\n      .catch(error => console.log(error, \"grabTrackMetrics\"));\n  }\n\n  getChartData = id => {\n    //Filters through an array of max 5 metric arrays.\n    const dataArr = this.state.metrics.data.filter(item => {\n      return item.metricId === id;\n    });\n\n    //if data exists for metric id. grab deltas or totals\n    //refactor this code to create data with both deltas and totals. -AWOO\n    if (dataArr.length) {\n      let data;\n      if (id === 41 || id === 247) {\n        data = dataArr[0].timeseries.deltas;\n      } else {\n        data = dataArr[0].timeseries.totals;\n      }\n      const chartData = Object.keys(data).map(keys => {\n        return { date: new Date(keys), value: data[keys] };\n      });\n      //console.log(chartData);\n      return chartData;\n    }\n  };\n\n  //get clean track data.\n  getTrackData = () => {\n    console.log(this.state.trackMetrics, this.state.trackMetrics.length);\n    //lol this is not so good...\n    if (this.state.trackMetrics) {\n      if (this.state.trackMetrics.data.length) {\n        return this.state.trackMetrics.data.filter(data => {\n          return data.summary.TW;\n        });\n      }\n    }\n  };\n\n  handleMetricIdChange = id => {\n    if (this.state.metricId !== id) {\n      this.setState({ metricId: id });\n    }\n  };\n\n  //TODO - AWOO - use this method to update date range with range slider.\n  onRangeChange = e => {\n    console.log(e);\n  };\n\n  //TODO - Bubble Handler\n  handleBubbles = () => {\n    this.setState({\n      bubbleData: [\n        { name: \"New Rules\", radius: Math.random() * 50 + 20 },\n        { name: \"Hotter Than Hell\", radius: Math.random() * 50 + 20 },\n        { name: \"Mwah\", radius: Math.random() * 50 + 20 },\n        { name: \"Test\", radius: Math.random() * 50 + 20 },\n        { name: \"Andrew\", radius: Math.random() * 50 + 20 },\n        { name: \"Kaye\", radius: Math.random() * 50 + 20 }\n      ]\n    });\n  };\n\n  render() {\n    let {\n      artistInfo,\n      metrics,\n      metricId,\n      metricMetadata,\n      trackMetrics\n    } = this.state;\n    //initialize dom elements as nulls until artis data is retrieved.\n    let metricNames, data, bubbleChart, circleData;\n\n    //create data only after metrics was fetched from API\n    if (metrics) {\n      data = this.getChartData(metricId);\n\n      //grab list of metric names.\n      metricNames = metrics.data\n        .reduce((acc, metric) => {\n          for (let m of metricMetadata.items) {\n            if (m.id === metric.metricId) {\n              acc.push({ fullName: m.fullName, id: m.id });\n              break;\n            }\n          }\n          return acc;\n        }, [])\n        .sort((a, b) => {\n          return a.id - b.id;\n        });\n    }\n\n    if (trackMetrics) {\n      //console.log(trackMetrics);\n      circleData = this.getTrackData();\n      console.log(\"circ\", circleData);\n      bubbleChart = (\n        <>\n          <BubbleChart data={circleData} />\n          <button onClick={this.handleBubbles}>Change Bubbles</button>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"App\">\n          <NavigationBar handleArtistChange={this.handleArtistChange} />\n\n          <ArtistInfo artistInfo={artistInfo} />\n\n          {bubbleChart}\n\n          <SocialMediaMetrics data={data} onRangeChang={this.onRangeChange} />\n\n          <MetricViewBar\n            clicked={this.handleMetricIdChange}\n            metricNames={metricNames}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nconst publicKey = \"eb74a82009cbc53c9b44866743633f9d\";\n\naxios.defaults.baseURL = \"https://api.nextbigsound.com/\";\naxios.defaults.params = {};\naxios.defaults.params[\"access_token\"] = publicKey;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}