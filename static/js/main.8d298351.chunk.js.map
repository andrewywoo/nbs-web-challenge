{"version":3,"sources":["components/Rect/Rect.js","components/BarChart/BarChart.js","components/MetricViewBar/MetricViewBar.js","components/SearchOptions/SearchOptions.js","App.js","index.js"],"names":["Rect","state","x","y","width","height","fill","_this$state","this","props","yExtent","d3","refs","rect","attr","yScale","transition","duration","_this$state2","react_default","a","createElement","ref","nextProps","prevState","Component","margin","BarChart","bars","xScale","range","wScale","paddingInner","paddingOuter","accentScale","xAxis","_this","tickFormat","yAxis","call","_this2","transform","concat","map","d","i","components_Rect_Rect","key","bandwidth","data","domain","date","value","metricViewBar","buttons","metricNames","obj","id","onClick","clicked","bind","fullName","className","searchOptions","htmlFor","type","placeholder","onChange","handleArtistChange","DayPickerInput_default","onDayChange","handleStartDateChange","formatDate","format","parseDate","startDate","handleEndDateChange","endDate","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","artist","artistInfo","metrics","info","metricId","moment","event","emitDebouncedSearch","target","handleArtistSearch","val","setState","getChartData","dataArr","filter","item","length","timeseries","deltas","keys","Date","handleMetricIdChange","debounce","grabMetricInfo","grabArtistData","prevProps","axios","get","then","response","catch","error","console","log","_this3","artists","self","url","image","genre","barChart","_this4","src","images","alt","name","genres","join","components_BarChart_BarChart","reduce","acc","metric","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","items","Symbol","iterator","next","done","m","push","err","return","sort","b","Fragment","SearchOptions_SearchOptions","style","textAlign","MetricViewBar_MetricViewBar","defaults","baseURL","params","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8d298351.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Rect extends Component {\n  state = { x: null, y: null, width: null, height: null, fill: null };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    return {\n      x: nextProps.x,\n      y: nextProps.y,\n      width: nextProps.width,\n      height: nextProps.height,\n      fill: nextProps.fill\n    };\n  }\n\n  componentDidUpdate() {\n    const { y, height } = this.state;\n\n    let rect;\n    //vertical bar transition\n    //if log scale use yExtent, if not use linear scale from range 0\n    if (this.props.yExtent) {\n      rect = d3\n        .select(this.refs.rect)\n        .attr(\"y\", this.props.yScale(this.props.yExtent[0]));\n    } else {\n      rect = d3.select(this.refs.rect).attr(\"y\", this.props.yScale(0));\n    }\n\n    rect\n      .attr(\"height\", 0)\n      .transition()\n      .duration(800)\n      .attr(\"y\", y)\n      .attr(\"height\", height);\n  }\n\n  render() {\n    const { x, y, height, width, fill } = this.state;\n\n    return (\n      <rect ref=\"rect\" x={x} y={y} height={height} width={width} fill={fill} />\n    );\n  }\n}\n\nexport default Rect;\n","import React, { Component } from \"react\";\nimport Rect from \"../Rect/Rect\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 50, top: 20, right: 20, bottom: 50 };\nconst height = 500 - margin.top - margin.bottom;\nconst width = 700 - margin.left - margin.right;\n\nclass BarChart extends Component {\n  state = {\n    bars: [],\n    xScale: d3.scaleTime().range([0, width]),\n    yScale: d3.scaleLinear().range([height, 0]),\n    // yScale: d3.scaleLog().range([height, 0]),\n    wScale: d3\n      .scaleBand()\n      .range([0, width])\n      .paddingInner(0.1)\n      .paddingOuter(0),\n    accentScale: d3.scaleSequential(d3.interpolateRdBu),\n    yExtent: null\n  };\n\n  //setting up axis and tick formats\n  xAxis = d3.axisBottom(this.state.xScale).tickFormat(d3.timeFormat(\"%b-%Y\"));\n  yAxis = d3.axisLeft(this.state.yScale);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    const { data } = nextProps;\n    const { xScale, yScale, wScale, accentScale } = prevState;\n\n    //recalculate scales with new data\n    xScale.domain(d3.extent(data, d => d.date));\n    yScale.domain([0, d3.max(data, d => d.value)]);\n\n    //Below is yscale for log\n    // const yExtent = d3.extent(data, d => d.value);\n    // yScale.domain(d3.extent(data, d => d.value));\n\n    wScale.domain(data.map(d => d.date));\n    accentScale.domain([d3.max(data, d => d.value), 0]);\n\n    //create rect x and y values.\n    const bars = data.map(d => {\n      return {\n        x: xScale(d.date),\n        y: yScale(d.value),\n        height: height - yScale(d.value),\n        fill: accentScale(d.value)\n      };\n    });\n\n    return { bars, yScale };\n  }\n\n  //update axis when component updates\n  componentDidUpdate() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis);\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  render() {\n    return (\n      <svg\n        height={height + margin.top + margin.bottom}\n        width={width + margin.left + margin.right}\n      >\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          {this.state.bars.map((d, i) => {\n            return (\n              <Rect\n                key={i}\n                x={d.x}\n                y={d.y}\n                height={d.height}\n                width={this.state.wScale.bandwidth()}\n                fill={d.fill}\n                yScale={this.state.yScale}\n                // yExtent={this.state.yExtent}\n              />\n            );\n          })}\n          <g ref=\"xAxis\" transform={`translate(0, ${height})`} />\n          <g ref=\"yAxis\" />\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport \"./MetricViewBar.css\";\n\nconst metricViewBar = props => {\n  let buttons;\n\n  if (props.metricNames) {\n    buttons = props.metricNames.map(obj => {\n      return (\n        <button key={obj.id} onClick={props.clicked.bind(this, obj.id)}>\n          {obj.fullName}\n        </button>\n      );\n    });\n  }\n\n  return <div className=\"metric-view-bar\">{buttons}</div>;\n};\n\nexport default metricViewBar;\n","import React from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport \"./SearchOptions.css\";\n\nconst searchOptions = props => {\n  return (\n    <div className=\"SearchOptions\">\n      <div>\n        <label htmlFor=\"search\">Artist:</label>\n        <input\n          id=\"search\"\n          className=\"artistSearchInput\"\n          type=\"text\"\n          placeholder=\"Search An Artist\"\n          onChange={props.handleArtistChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"startDt\">Start Date:</label>\n        <DayPickerInput\n          id=\"startDt\"\n          onDayChange={props.handleStartDateChange}\n          formatDate={formatDate}\n          format=\"YYYY-MM-DD\"\n          parseDate={parseDate}\n          value={props.startDate}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"endDt\">End Date:</label>\n        <DayPickerInput\n          id=\"endDt\"\n          onDayChange={props.handleEndDateChange}\n          formatDate={formatDate}\n          format=\"YYYY-MM-DD\"\n          parseDate={parseDate}\n          value={props.endDate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default searchOptions;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport debounce from \"lodash/debounce\";\nimport BarChart from \"./components/BarChart/BarChart\";\nimport MetricViewBar from \"./components/MetricViewBar/MetricViewBar\";\nimport SearchOptions from \"./components/SearchOptions/SearchOptions\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  state = {\n    artist: \"\",\n    artistInfo: null,\n    metrics: null,\n    info: null,\n    metricId: 41,\n    startDate: moment(\"2017-01-01\").format(\"YYYY-MM-DD\"),\n    endDate: moment(\"2017-12-31\").format(\"YYYY-MM-DD\")\n  };\n\n  constructor() {\n    super();\n    this.emitDebouncedSearch = debounce(this.handleArtistSearch, 500);\n  }\n\n  componentDidMount() {\n    this.grabMetricInfo();\n    if (this.state.artist) {\n      this.grabArtistData();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Only update artist data if new entry is not blank or different from prev entry\n    if (this.state.artist) {\n      if (this.state.artist !== prevState.artist) {\n        this.grabArtistData();\n      }\n      if (this.state.startDate && this.state.endDate) {\n        if (\n          this.state.startDate !== prevState.startDate ||\n          this.state.endDate !== prevState.endDate\n        ) {\n          this.grabArtistData();\n        }\n      }\n    }\n  }\n\n  grabMetricInfo() {\n    axios\n      .get(\"metrics/?fields=items.*\")\n      .then(response => {\n        this.setState({ info: response.data });\n      })\n      .catch(error => console.log(error));\n  }\n\n  grabArtistData() {\n    axios\n      .get(`search/v1/artists/?query=${this.state.artist}&limit=1`)\n      .then(response => {\n        if (!response.data.artists.length) return null;\n        const artistInfo = response.data.artists[0];\n        return axios.get(\n          `artists/${artistInfo.id}/data?metricIds=28,41,11,151,247&startDate=${\n            this.state.startDate\n          }&endDate=${this.state.endDate}&timeseries=totals,deltas`\n        );\n      })\n      .then(response => {\n        if (response) {\n          this.setState({\n            metrics: response.data,\n            metricId: response.data.data[0].metricId\n          });\n          console.log(\"metrics\", response.data);\n          return axios.get(response.data.artist.self.url);\n        }\n      })\n      .then(response => {\n        if (response) {\n          console.log(\"artistinfo\", response.data);\n          this.setState({ artistInfo: response.data });\n        }\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleArtistChange = event => {\n    this.emitDebouncedSearch(event.target.value);\n  };\n\n  handleArtistSearch = val => {\n    this.setState({ artist: val });\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date).format(\"YYYY-MM-DD\")\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date).format(\"YYYY-MM-DD\")\n    });\n  };\n\n  getChartData = id => {\n    const dataArr = this.state.metrics.data.filter(item => {\n      return item.metricId === id;\n    });\n    if (dataArr.length) {\n      const data = dataArr[0].timeseries.deltas;\n      const chartData = Object.keys(data).map(keys => {\n        return { date: new Date(keys), value: data[keys] };\n      });\n      return chartData;\n    }\n  };\n\n  handleMetricIdChange = id => {\n    this.setState({ metricId: id });\n  };\n\n  render() {\n    //initialize dom elements as nulls until artis data is retrieved.\n    let image, info, genre, barChart, metricNames;\n\n    if (this.state.artistInfo) {\n      image = (\n        <img\n          height=\"100\"\n          src={this.state.artistInfo.images[0][100]}\n          alt=\"Artist\"\n        />\n      );\n      info = <h1>Artist Name: {this.state.artistInfo.name}</h1>;\n      genre = <h2>Genre: {this.state.artistInfo.genres.join(\" \")}</h2>;\n    }\n\n    if (this.state.metrics) {\n      // populate barchart with data\n      barChart = <BarChart data={this.getChartData(this.state.metricId)} />;\n\n      //grab list of metric full names.\n      metricNames = this.state.metrics.data\n        .reduce((acc, metric) => {\n          for (let m of this.state.info.items) {\n            if (m.id === metric.metricId) {\n              acc.push({ fullName: m.fullName, id: m.id });\n              break;\n            }\n          }\n          return acc;\n        }, [])\n        .sort((a, b) => {\n          return a.id - b.id;\n        });\n    }\n\n    return (\n      <>\n        <div className=\"App\">\n          <SearchOptions\n            handleArtistChange={this.handleArtistChange}\n            handleStartDateChange={this.handleStartDateChange}\n            handleEndDateChange={this.handleEndDateChange}\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n          />\n          <div className=\"artist-info\">\n            {image}\n            <div style={{ textAlign: \"center\" }}>\n              {info}\n              {genre}\n            </div>\n          </div>\n          {barChart}\n          <MetricViewBar\n            clicked={this.handleMetricIdChange}\n            metricNames={metricNames}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nconst publicKey = \"eb74a82009cbc53c9b44866743633f9d\";\n\naxios.defaults.baseURL = \"https://api.nextbigsound.com/\";\naxios.defaults.params = {};\naxios.defaults.params[\"access_token\"] = publicKey;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}