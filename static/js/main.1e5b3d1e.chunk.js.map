{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/UI/Spinner/Spinner.js","containers/ArtistInfo/ArtistInfo.js","components/BarChart/Rect/Rect.js","components/Tooltip/Tooltip.js","components/BarChart/BarChart.js","components/MetricViewBar/MetricViewBar.js","containers/SocialMediaMetrics/SocialMediaMetrics.js","components/BubbleChart/BubbleChart.js","components/TrackViewBar/TrackViewBar.js","components/TrackDateRange/TrackDateRange.js","containers/TrackMetrics/TrackMetrics.js","components/UI/SplashPage/SplashPage.js","App.js","index.js"],"names":["navigationBar","props","react_default","a","createElement","className","id","type","placeholder","onChange","handleArtistChange","href","spinner","style","artistInfo","image","name","genre","content","recordLabels","monthlyActiveListeners","streams","formatter","d3","isLoaded","Spinner_Spinner","src","images","original","alt","genres","join","pandoraAudience","total","Fragment","Rect","state","x","y","width","height","fill","this","animateRect","nextProps","nextState","_this$state","yExtent","refs","rect","attr","yScale","transition","duration","_this$state2","onMouseOver","onMouseOverCallback","onMouseOut","onMouseOutCallback","ref","prevState","Component","toolTip","xScale","styles","left","hoveredBar","top","colSpan","moment","invert","format","margin","BarChart","bars","range","wScale","paddingInner","paddingOuter","accentScale","metricId","startDate","endDate","artistId","xAxis","_this","tickFormat","yAxis","d","setState","drawAxis","prevProps","call","selectAll","_this2","transform","concat","map","i","BarChart_Rect_Rect","key","bandwidth","bind","textAnchor","yLabel","Tooltip_Tooltip","chartData","data","filter","sDate","unix","eDate","date","value","domain","metricViewBar","buttons","metricNames","obj","onClick","clicked","fullName","Range","createSliderWithTooltip","Slider","startDateUnix","Date","subtract","endDateUnix","socialMediaMetrics","chartTitle","metrics","getChartData","reduce","acc","metric","m","metricMetadata","push","sort","b","cArr","split","length","MetricViewBar_MetricViewBar","handleMetricIdChange","marginBottom","components_BarChart_BarChart","index_es","fontSize","title","icon","faInfoCircle","defaultValue","min","max","step","allowCross","tipFormatter","onAfterChange","onRangeChange","simulation","force","strength","BubbleChart","circles","rScale","cScale","trackDateRange","trackMetricId","forceTick","node","radius","on","renderCircles","nodes","alpha","restart","_this3","_this4","tooltip","container","append","formatCommas","svgContainer","exit","remove","nodeEnter","enter","label","val","merge","select","html","text","substring","top15","summary","slice","metadata","asset_name","trackViewBar","bar","padding","trackMetrics","handleTrackIdChange","Object","keys","dateRangeDict","handleTrackDateRangeChange","dateRangeTitle","circleData","bubbleTitle","TW","LW","LM","YTD","LTD","getTrackData","TrackViewBar_TrackViewBar","TrackDateRange","components_BubbleChart_BubbleChart","splashPage","color","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","artist","isTrackMetricLoading","event","emitDebouncedSearch","target","handleArtistSearch","dataArr","item","timeseries","deltas","totals","e","dtRange","debounce","grabMetricMetadata","grabArtistMetric","axios","get","then","response","metricTitles","items","description","catch","error","console","log","artists","resetArtistInfo","grabTrackMetrics","grabArtistInfo","_this5","_source","cancel","CancelToken","source","forEach","mId","cancelToken","token","tMetric","objectSpread","isCancel","NavigationBar_NavigationBar","ArtistInfo_ArtistInfo","SocialMediaMetrics_SocialMediaMetrics","TrackMetrics_TrackMetrics","SplashPage_SplashPage","defaults","baseURL","params","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e5b3d1e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavigationBar.css\";\n\nconst navigationBar = props => {\n  return (\n    <nav className=\"NavigationBar\">\n      <div className=\"NavigationBar__search-bar\">\n        <input\n          id=\"search\"\n          className=\"NavigationBar__input\"\n          type=\"text\"\n          placeholder=\"Search For An Artist\"\n          onChange={props.handleArtistChange}\n        />\n      </div>\n      <div className=\"NavigationBar__links\">\n        <ul className=\"NavigationBar__ul\">\n          <li className=\"NavigationBar__li\">\n            <a href=\"#artistInfo\" className=\"NavigationBar__href\">\n              Artist Info\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#socialMedia\" className=\"NavigationBar__href\">\n              Social Media\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#trackSpins\" className=\"NavigationBar__href\">\n              Track Spins\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a\n              href=\"https://github.com/andrewywoo/\"\n              className=\"NavigationBar__href\"\n            >\n              by awoo\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default navigationBar;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst spinner = props => {\n  return (\n    <div style={props.style} className=\"Loader\">\n      Loading...\n    </div>\n  );\n};\n\nexport default spinner;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as d3 from \"d3\";\nimport \"./ArtistInfo.css\";\n\nconst artistInfo = props => {\n  let image = null;\n  let name = null;\n  let genre = null;\n  let content = null;\n  let recordLabels = null;\n  let monthlyActiveListeners = null;\n  let streams = null;\n  let formatter = d3.format(\",\");\n\n  //if search is pending. show loading spinner.\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  //when artist info is retrived. load content instead of spinner.\n  if (props.artistInfo) {\n    image = <img src={props.artistInfo.images[0].original} alt=\"Artist\" />;\n    name = <h1>{props.artistInfo.name}</h1>;\n    genre = <h2>{props.artistInfo.genres.join(\" - \")}</h2>;\n    recordLabels = <p>{props.artistInfo.recordLabels.join(\" - \")}</p>;\n    if (props.artistInfo.pandoraAudience.monthlyActiveListeners) {\n      monthlyActiveListeners = (\n        <p>\n          {formatter(\n            props.artistInfo.pandoraAudience.monthlyActiveListeners.total\n          )}\n        </p>\n      );\n    }\n    if (props.artistInfo.pandoraAudience.streams) {\n      streams = (\n        <p>{formatter(props.artistInfo.pandoraAudience.streams.total)}</p>\n      );\n    }\n\n    content = (\n      <>\n        <div className=\"ArtistInfo__info-bio\">\n          <div className=\"ArtistInfo__info-image\">{image}</div>\n          <div className=\"ArtistInfo__info-description\">\n            {name}\n            {genre}\n            {recordLabels}\n          </div>\n        </div>\n        <div>\n          <section className=\"ArtistInfo__info-card\">\n            <h2>Monthly Active Listeners</h2>\n            <div>{monthlyActiveListeners}</div>\n          </section>\n          <section className=\"ArtistInfo__info-card\">\n            <h2>Monthly Total Streams</h2>\n            <div>{streams}</div>\n          </section>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"artistInfo\" className=\"ArtistInfo\">\n      <div className=\"ArtistInfo__label\">\n        <span>Artist Info</span>\n      </div>\n      <div className=\"ArtistInfo__info\">{content}</div>\n    </div>\n  );\n};\n\nexport default artistInfo;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Rect extends Component {\n  state = { x: null, y: null, width: null, height: null, fill: null };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    return {\n      x: nextProps.x,\n      y: nextProps.y,\n      width: nextProps.width,\n      height: nextProps.height,\n      fill: nextProps.fill\n    };\n  }\n\n  componentDidMount() {\n    this.animateRect();\n  }\n\n  componentDidUpdate() {\n    this.animateRect();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.x !== this.state.x ||\n      nextProps.y !== this.state.y ||\n      nextProps.width !== this.state.width ||\n      nextProps.height !== this.state.height ||\n      nextProps.fill !== this.state.fill\n    );\n  }\n\n  animateRect() {\n    const { y, height } = this.state;\n\n    let rect;\n\n    //use yExtent if exists, if not use linear scale from range 0\n    if (this.props.yExtent) {\n      rect = d3\n        .select(this.refs.rect)\n        .attr(\"y\", this.props.yScale(this.props.yExtent[0]));\n    } else {\n      rect = d3.select(this.refs.rect).attr(\"y\", this.props.yScale(0));\n    }\n\n    //set up bar transition\n    rect\n      .attr(\"height\", 0)\n      .transition()\n      .duration(800)\n      .attr(\"y\", y)\n      .attr(\"height\", height);\n  }\n\n  render() {\n    const { x, y, height, width, fill } = this.state;\n\n    return (\n      <rect\n        onMouseOver={this.props.onMouseOverCallback}\n        onMouseOut={this.props.onMouseOutCallback}\n        ref=\"rect\"\n        x={x}\n        y={y}\n        height={height}\n        width={width}\n        fill={fill}\n      />\n    );\n  }\n}\n\nexport default Rect;\n","import React from \"react\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport \"./Tooltip.css\";\n\nconst toolTip = props => {\n  const { xScale, yScale } = props;\n  const styles = {\n    left: props.hoveredBar.x,\n    top: props.hoveredBar.y\n  };\n\n  return (\n    <div className=\"Tooltip\" style={styles}>\n      <table>\n        <thead>\n          <tr>\n            <th colSpan=\"2\" />\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td colSpan=\"1\">Date:</td>\n            <td colSpan=\"1\">\n              {moment(xScale.invert(props.hoveredBar.x)).format(\"MMM Do YYYY\")}\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"1\">Value:</td>\n            <td colSpan=\"1\">\n              {d3.format(\",.0f\")(yScale.invert(props.hoveredBar.y))}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default toolTip;\n","import React, { Component } from \"react\";\nimport Rect from \"./Rect/Rect\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport \"./BarChart.css\";\nimport Tooltip from \"../Tooltip/Tooltip\";\n\n//setting up global values for svg height and width\nconst margin = { left: 100, top: 20, right: 20, bottom: 50 };\nconst height = 480 - margin.top - margin.bottom;\nconst width = 800 - margin.left - margin.right;\n\nclass BarChart extends Component {\n  state = {\n    bars: [],\n    xScale: d3.scaleTime().range([0, width]),\n    yScale: d3.scaleLinear().range([height, 0]),\n    //yScale: d3.scaleLog().range([height, 0]),\n    wScale: d3\n      .scaleBand()\n      .range([0, width])\n      .paddingInner(0.1)\n      .paddingOuter(0),\n    accentScale: d3.scaleSequential(d3.interpolateRdBu),\n    yExtent: null,\n    metricId: null,\n    startDate: null,\n    endDate: null,\n    artistId: null,\n    hoveredBar: null\n  };\n\n  //setting up axis and tick formats\n  xAxis = d3.axisBottom(this.state.xScale).tickFormat(d3.timeFormat(\"%b-%Y\"));\n  yAxis = d3.axisLeft(this.state.yScale);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps, !nextProps);\n    if (!nextProps) return null;\n\n    const { chartData, startDate, endDate, metricId, artistId } = nextProps;\n    const { xScale, yScale, wScale, accentScale } = prevState;\n\n    //clean data\n    const data = chartData\n      .filter(d => {\n        let sDate = moment.unix(startDate);\n        let eDate = moment.unix(endDate);\n        let date = moment(d.date);\n        return d.value && d.date && date >= sDate && date <= eDate;\n      })\n      .map(d => {\n        d.value = +d.value;\n        return d;\n      });\n\n    //recalculate scales with new data\n    xScale.domain(d3.extent(data, d => d.date));\n    yScale.domain([0, d3.max(data, d => d.value)]);\n    //Below is yscale for log\n    //const yExtent = d3.extent(data, d => d.value);\n    //yScale.domain(d3.extent(data, d => d.value));\n    wScale.domain(data.map(d => d.date));\n    accentScale.domain([d3.max(data, d => d.value), 0]);\n\n    //create rect x and y values.\n    const bars = data.map(d => {\n      return {\n        x: xScale(d.date),\n        y: yScale(d.value),\n        height: height - yScale(d.value),\n        fill: accentScale(d.value)\n      };\n    });\n\n    return { bars, yScale, metricId, startDate, endDate, artistId };\n  }\n\n  //Only update barChart if data has been changed.\n  shouldComponentUpdate(nextProps, nextState) {\n    //console.log(\"shouldComponentUpdate\", nextProps, this.state);\n    return (\n      nextProps.metricId !== this.state.metricId ||\n      nextProps.startDate !== this.state.startDate ||\n      nextProps.endDate !== this.state.endDate ||\n      nextProps.artistId !== this.state.artistId ||\n      nextState.hoveredBar !== this.state.hoveredBar\n    );\n  }\n\n  //happens once. render x and y axis on loadup.\n  componentDidMount() {\n    this.drawAxis();\n  }\n\n  //update axis when component updates\n  componentDidUpdate(prevProps, prevState) {\n    this.drawAxis();\n  }\n\n  drawAxis() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-65)\");\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  onMouseOverCallback = d => {\n    this.setState({ hoveredBar: d });\n  };\n  onMouseOutCallback = d => {\n    this.setState({ hoveredBar: null });\n  };\n\n  render() {\n    return (\n      <div className=\"BarChart\">\n        <svg\n          height={height + margin.top + margin.bottom}\n          width={width + margin.left + margin.right}\n        >\n          <g transform={`translate(${margin.left},${margin.top})`}>\n            {this.state.bars.map((d, i) => {\n              return (\n                <Rect\n                  key={i}\n                  x={d.x}\n                  y={d.y}\n                  height={d.height}\n                  width={this.state.wScale.bandwidth()}\n                  fill={d.fill}\n                  yScale={this.state.yScale}\n                  onMouseOverCallback={this.onMouseOverCallback.bind(this, d)}\n                  onMouseOutCallback={this.onMouseOutCallback.bind(this, null)}\n                />\n              );\n            })}\n            <g ref=\"xAxis\" transform={`translate(0, ${height})`} />\n            <g ref=\"yAxis\" />\n\n            <text\n              className=\"BarChart-yLabel\"\n              x={-(height / 2)}\n              y={-80}\n              transform=\"rotate(-90)\"\n              textAnchor=\"middle\"\n            >\n              {this.props.yLabel}\n            </text>\n          </g>\n        </svg>\n        {this.state.hoveredBar ? (\n          <Tooltip\n            hoveredBar={this.state.hoveredBar}\n            xScale={this.state.xScale}\n            yScale={this.state.yScale}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport \"./MetricViewBar.css\";\n\nconst metricViewBar = props => {\n  let buttons;\n\n  if (props.metricNames) {\n    buttons = props.metricNames.map(obj => {\n      return obj.id === props.metricId ? (\n        <button\n          key={obj.id}\n          className=\"MetricView__buttons selected-button\"\n          onClick={props.clicked.bind(this, obj.id)}\n        >\n          {obj.fullName}\n        </button>\n      ) : (\n        <button\n          key={obj.id}\n          className=\"MetricView__buttons\"\n          onClick={props.clicked.bind(this, obj.id)}\n        >\n          {obj.fullName}\n        </button>\n      );\n    });\n  }\n\n  return <div className=\"MetricViews\">{buttons}</div>;\n};\n\nexport default metricViewBar;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport BarChart from \"../../components/BarChart/BarChart\";\nimport MetricViewBar from \"../../components/MetricViewBar/MetricViewBar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Slider from \"rc-slider\";\nimport moment from \"moment\";\nimport \"rc-slider/assets/index.css\";\nimport \"./SocialMediaMetrics.css\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n//get 5 years ago in unix time\nconst startDateUnix = moment(new Date())\n  .subtract(5, \"y\")\n  .unix();\n//get todays date in unix time\nconst endDateUnix = moment(new Date()).unix();\n\nconst socialMediaMetrics = props => {\n  // let barChart = null;\n  let data = null;\n  let metricNames = null;\n  let content = null;\n  let chartTitle = null;\n  let yLabel = null;\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n  //only do work if metrics is not null;\n  if (props.metrics) {\n    //Grab data if metric Id was changed\n    data = props.getChartData(props.metricId);\n\n    //grab list of metric names. gets passed into metric view bar.\n    metricNames = props.metrics.data\n      .reduce((acc, metric) => {\n        //look up fullName for each existing metric for artist.\n        let m = props.metricMetadata[metric.metricId];\n        if (m) {\n          acc.push({ fullName: m.fullName, id: metric.metricId });\n        }\n        return acc;\n      }, [])\n      .sort((a, b) => {\n        return a.id - b.id;\n      });\n\n    chartTitle = props.metricMetadata[props.metricId].fullName;\n\n    //grab the last word for y label. gets passed into bar chart.\n    let cArr = chartTitle.split(\" \");\n    yLabel = cArr[cArr.length - 1];\n\n    content = (\n      <>\n        <MetricViewBar\n          clicked={props.handleMetricIdChange}\n          metricNames={metricNames}\n          chartTitle={chartTitle}\n          metricId={props.metricId}\n        />\n        <h1 style={{ marginBottom: \".3em\" }}>{chartTitle}</h1>\n        <BarChart\n          chartData={data}\n          yLabel={yLabel}\n          metricId={props.metricId}\n          startDate={props.startDate}\n          endDate={props.endDate}\n          artistId={props.artistId}\n        />\n        <span className=\"SocialMediaMetrics__metrics-date-range\">\n          {moment.unix(props.startDate).format(\"MMM Do YYYY\")}\n          {\"   -   \"}\n          {moment.unix(props.endDate).format(\"MMM Do YYYY\")}\n          <FontAwesomeIcon\n            style={{ fontSize: \"1.2rem\", margin: \"0 8px\" }}\n            title=\"Use the range slider below to edit the date range.\"\n            icon={faInfoCircle}\n          />\n        </span>\n        <Range\n          className=\"SocialMediaMetrics__metrics-range-slider\"\n          defaultValue={[props.startDate, props.endDate]}\n          min={startDateUnix}\n          max={endDateUnix}\n          step={86400 /*1 day in seconds*/}\n          allowCross={false}\n          tipFormatter={value => moment.unix(value).format(\"MMM Do YYYY\")}\n          onAfterChange={props.onRangeChange}\n        />\n      </>\n    );\n  }\n\n  //return barChart;\n  return (\n    <div id=\"socialMedia\" className=\"SocialMediaMetrics\">\n      <div className=\"SocialMediaMetrics__label\">\n        <span>Social Media</span>\n      </div>\n      <div className=\"SocialMediaMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default socialMediaMetrics;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./BubbleChart.css\";\n\n//setting up global values for svg height and width\nconst margin = { left: 20, top: 20, right: 20, bottom: 20 };\nconst height = 600 - margin.top - margin.bottom;\nconst width = 800 - margin.left - margin.right;\n\n//setup the simulation for the bubbles to explode from the center on data change\nconst simulation = d3\n  .forceSimulation()\n  .force(\"center\", d3.forceCenter(width / 2, height / 2))\n  .force(\"charge\", d3.forceManyBody().strength(200));\n\nclass BubbleChart extends Component {\n  state = {\n    circles: [],\n    rScale: d3.scaleLinear().range([30, 125]),\n    cScale: d3.scaleOrdinal(d3.schemePaired),\n    trackDateRange: null,\n    trackMetricId: null,\n    artistId: null\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps,prevState);\n    if (!nextProps) return null;\n    const { data, trackDateRange, trackMetricId, artistId } = nextProps;\n    const { rScale, cScale } = prevState;\n\n    //filter top 15\n    let top15 = data\n      .sort((a, b) => {\n        return b.summary[trackDateRange] - a.summary[trackDateRange];\n      })\n      .slice(0, 15);\n\n    //Update scales with new data\n    rScale.domain(d3.extent(top15, d => d.summary[trackDateRange]));\n    cScale.domain(top15, d => d.metadata.asset_name);\n\n    //create data for circles\n    const circles = top15.map(data => {\n      return {\n        name: data.metadata.asset_name,\n        value: data.summary[trackDateRange]\n      };\n    });\n\n    return { circles, trackDateRange, trackMetricId, artistId };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.trackDateRange !== this.state.trackDateRange ||\n      nextProps.trackMetricId !== this.state.trackMetricId ||\n      nextProps.artistId !== this.state.artistId\n    );\n  }\n\n  componentDidMount() {\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n    this.renderCircles();\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  componentDidUpdate() {\n    //console.log(\"bubbleChart: componentDidUpdate\");\n    //console.log(this.state.circles);\n\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n\n    this.renderCircles();\n\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  renderCircles() {\n    //console.log(\"renderCircles\", this.state.circles);\n\n    let tooltip = d3\n      .select(this.refs.container)\n      .append(\"div\")\n      .style(\"position\", \"absolute\")\n      .style(\"text-align\", \"center\")\n      .style(\"z-index\", \"100\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"border\", \"1px solid #fffff4\")\n      .style(\"background\", \"#fffff4\")\n      .style(\"border-radius\", \"4px\")\n      .style(\"padding\", \"8px\")\n      .style(\"font-size\", \"1.5rem\");\n\n    const formatCommas = d3.format(\",\");\n\n    //JOIN\n    this.node = d3\n      .select(this.refs.svgContainer)\n      .selectAll(\"g\")\n      .data(this.state.circles);\n\n    //EXIT\n    this.node.exit().remove();\n\n    //ENTER\n    this.nodeEnter = this.node.enter().append(\"g\");\n    this.circles = this.nodeEnter.append(\"circle\");\n    this.label = this.nodeEnter.append(\"text\").attr(\"id\", \"label\");\n    this.val = this.nodeEnter.append(\"text\").attr(\"id\", \"val\");\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"circle\")\n      .attr(\"y\", 1)\n      .attr(\"r\", d => this.state.rScale(d.value))\n      .attr(\"fill\", d => this.state.cScale(d.name))\n      .on(\"mouseover\", function(d) {\n        // return tooltip.text(d.name).style(\"visibility\", \"visible\");\n        return tooltip\n          .html(`<p>${d.name}</p><p>${formatCommas(d.value)}</p>`)\n          .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        return tooltip.style(\"top\", `${d.y}px`).style(\"left\", `${d.x}px`);\n      })\n      .on(\"mouseout\", function() {\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"#label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"fill\", \"black\")\n      .attr(\"font-family\", \"'Pragati Narrow', sans-serif\")\n      .text(d => {\n        //saving time instead of focusing on how to get text to wrap.\n        if (d.name.length > 17 && this.state.rScale(d.value) / 3 > 17)\n          return d.name.substring(0, 17);\n        return d.name.substring(0, this.state.rScale(d.value) / 3);\n      })\n      .on(\"mouseover\", function(d) {\n        return tooltip\n          .html(`<p>${d.name}</p><p>${formatCommas(d.value)}</p>`)\n          .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        return tooltip.style(\"top\", `${d.y}px`).style(\"left\", `${d.x}px`);\n      })\n      .on(\"mouseout\", function() {\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"#val\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"dy\", \"1em\")\n      .attr(\"fill\", \"black\")\n      .attr(\"font-family\", \"'Pragati Narrow', sans-serif\")\n      .text(d => formatCommas(d.value))\n      .on(\"mouseover\", function(d) {\n        return tooltip\n          .html(`<p>${d.name}</p><p>${formatCommas(d.value)}</p>`)\n          .style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", function(d) {\n        return tooltip.style(\"top\", `${d.y}px`).style(\"left\", `${d.x}px`);\n      })\n      .on(\"mouseout\", function() {\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n  }\n\n  //update positioning of group every tick.\n  forceTick = () => {\n    this.node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  };\n\n  render() {\n    return (\n      <div className=\"BubbleContainer\" ref=\"container\">\n        <svg ref=\"svgContainer\" width={width} height={height} />\n      </div>\n    );\n  }\n}\n\nexport default BubbleChart;\n","import React from \"react\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport \"./TrackViewBar.css\";\n\nconst trackViewBar = props => {\n  let style = {\n    transform: \"scale(.5)\",\n    margin: \"0px 65px\",\n    padding: \"0\"\n  };\n\n  let views = [410, 411, 413, 414];\n  let bar = null;\n\n  //map ids with buttons or spinner if data not loaded yet.\n  bar = views.map(id => {\n    return props.trackMetrics[id] ? (\n      //checking if button is the selected button.\n      id === props.trackMetricId ? (\n        <button\n          className=\"selected-button\"\n          onClick={props.handleTrackIdChange.bind(this, id)}\n        >\n          {props.metricMetadata[id].fullName}\n        </button>\n      ) : (\n        <button onClick={props.handleTrackIdChange.bind(this, id)}>\n          {props.metricMetadata[id].fullName}\n        </button>\n      )\n    ) : (\n      <Spinner style={style} />\n    );\n  });\n\n  return <div className=\"TrackViews\">{bar}</div>;\n};\n\nexport default trackViewBar;\n","import React from \"react\";\n\nconst trackDateRange = props => {\n  const dateRangeButtons = Object.keys(props.dateRangeDict).map(key => {\n    if (key === \"LTD\" && props.trackMetricId === 413) return null;\n    if (key === \"LTD\" && props.trackMetricId === 414) return null;\n    return key === props.trackDateRange ? (\n      <button\n        className=\"selected-button\"\n        style={{ margin: \"12px 0\" }}\n        key={key}\n        onClick={props.handleTrackDateRangeChange.bind(this, key)}\n      >\n        {props.dateRangeDict[key]}\n      </button>\n    ) : (\n      <button\n        style={{ margin: \"12px 0\" }}\n        key={key}\n        onClick={props.handleTrackDateRangeChange.bind(this, key)}\n      >\n        {props.dateRangeDict[key]}\n      </button>\n    );\n  });\n\n  return dateRangeButtons;\n};\n\nexport default trackDateRange;\n","import React from \"react\";\nimport BubbleChart from \"../../components/BubbleChart/BubbleChart\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport \"./TrackMetrics.css\";\nimport TrackViewBar from \"../../components/TrackViewBar/TrackViewBar\";\nimport TrackDateRange from \"../../components/TrackDateRange/TrackDateRange\";\n\nconst trackMetrics = props => {\n  let circleData = null;\n  let content = null;\n  let bubbleTitle = null;\n  let dateRangeDict = {\n    TW: \"This Week\",\n    LW: \"Last Week\",\n    LM: \"Last Month\",\n    YTD: \"Year To Date\",\n    LTD: \"Lifetime Value\"\n  };\n  let dateRangeTitle;\n\n  //props.trackDateRange\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  if (props.trackMetrics[props.trackMetricId]) {\n    //grab bubble chart data with new metric id.\n    circleData = props.getTrackData(props.trackMetricId);\n\n    //grab chart title from metric dictionary.\n    bubbleTitle = props.metricMetadata[props.trackMetricId].fullName;\n    dateRangeTitle = dateRangeDict[props.trackDateRange];\n\n    content = (\n      <>\n        <TrackViewBar\n          trackMetrics={props.trackMetrics}\n          trackMetricId={props.trackMetricId}\n          handleTrackIdChange={props.handleTrackIdChange}\n          metricMetadata={props.metricMetadata}\n        />\n        <h1 className=\"TrackMetrics__metrics-title\">{bubbleTitle}</h1>\n        <h2 className=\"TrackMetrics__metrics-range\">{dateRangeTitle}</h2>\n        <div className=\"TrackMetrics__section\">\n          <div className=\"TrackMetrics__section-range\">\n            <TrackDateRange\n              handleTrackDateRangeChange={props.handleTrackDateRangeChange}\n              dateRangeDict={dateRangeDict}\n              trackMetricId={props.trackMetricId}\n              trackDateRange={props.trackDateRange}\n            />\n          </div>\n          <div>\n            <BubbleChart\n              className=\"BubbleChart\"\n              data={circleData}\n              trackDateRange={props.trackDateRange}\n              trackMetricId={props.trackMetricId}\n              artistId={props.artistId}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"trackSpins\" className=\"TrackMetrics\">\n      <div className=\"TrackMetrics__label\">\n        <span>Track Spins</span>\n      </div>\n      <div className=\"TrackMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default trackMetrics;\n","import React from \"react\";\nimport \"./SplashPage.css\";\n\nconst splashPage = props => {\n  return (\n    <div className=\"SplashPage\">\n      <p style={{ color: \"grey\" }}>\n        Welcome to the Artist Metric Quick Search application. This application\n        was written using D3.js + React. The data is retrieved by an API\n        provided by the Next Big Sound. Please search an artist on the top left\n        to begin using the application.\n      </p>\n    </div>\n  );\n};\n\nexport default splashPage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport debounce from \"lodash/debounce\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport ArtistInfo from \"./containers/ArtistInfo/ArtistInfo\";\nimport SocialMediaMetrics from \"./containers/SocialMediaMetrics/SocialMediaMetrics\";\nimport TrackMetrics from \"./containers/TrackMetrics/TrackMetrics\";\nimport moment from \"moment\";\nimport SplashPage from \"./components/UI/SplashPage/SplashPage\";\n\nclass App extends Component {\n  state = {\n    artist: \"\",\n    artistId: \"\",\n    artistInfo: null,\n    metrics: null,\n    metricMetadata: null,\n    metricId: 41,\n    trackMetricId: 410,\n    trackMetrics: {},\n    startDate: moment(new Date())\n      .subtract(5, \"y\")\n      .unix(),\n    endDate: moment(new Date()).unix(),\n    trackDateRange: \"TW\",\n    isLoaded: false,\n    isTrackMetricLoading: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.emitDebouncedSearch = debounce(this.handleArtistSearch, 500);\n  }\n\n  //Search Artis Event Handlers\n  handleArtistChange = event => {\n    this.emitDebouncedSearch(event.target.value);\n  };\n  handleArtistSearch = val => {\n    this.setState({ artist: val });\n  };\n\n  componentDidMount() {\n    this.grabMetricMetadata();\n    if (this.state.artist) {\n      this.grabArtistMetric();\n      //this.grabArtistInfo();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Only update artist data if new entry is not blank or different from prev entry\n    if (this.state.artist) {\n      if (this.state.artist !== prevState.artist) {\n        this.grabArtistMetric();\n        //this.grabArtistInfo();\n      }\n    }\n  }\n\n  resetArtistInfo() {\n    this.setState({ trackMetrics: {}, metrics: null, artistInfo: null });\n  }\n\n  //Grabs the metric meta data.\n  grabMetricMetadata() {\n    axios\n      .get(\"metrics/?fields=items.*\")\n      .then(response => {\n        //grab fullname and descriptions for corresponding ids.\n        let metricTitles = response.data.items.reduce((acc, m) => {\n          acc[m.id] = { fullName: m.fullName, description: m.description };\n          return acc;\n        }, {});\n\n        this.setState({ metricMetadata: metricTitles });\n      })\n      .catch(error => console.log(error, \"grabMetricMetadata\"));\n  }\n\n  //method to grab artist metrics.\n  grabArtistMetric() {\n    //Grab 5 years of data\n    const startDate = moment(new Date())\n      .subtract(5, \"y\")\n      .format(\"YYYY-MM-DD\");\n    const endDate = moment(new Date()).format(\"YYYY-MM-DD\");\n\n    //API searches for one artist.\n    axios\n      .get(`search/v1/artists/?query=${this.state.artist}&limit=1`)\n      .then(response => {\n        if (!response.data.artists.length) return null;\n\n        //When searching for new artist. Set is loaded to true. Add spinner bars for each section.\n        this.setState({ isLoaded: true });\n        this.resetArtistInfo();\n\n        //Set state for artist info.\n        const artistInfo = response.data.artists[0];\n        this.setState({ artistId: artistInfo.id });\n\n        //grab Track metrics\n        this.grabTrackMetrics();\n\n        //grab artist info\n        this.grabArtistInfo();\n\n        //set metrics to null when searching for new artist metrics;\n        this.setState({ metrics: null });\n        //Grabs Social Media Metrics\n        //id: 28, 41, 11, 151, 247\n        return axios.get(\n          `artists/${\n            artistInfo.id\n          }/data?metricIds=28,41,11,151,247&startDate=${startDate}&endDate=${endDate}&timeseries=totals,deltas`\n        );\n      })\n      .then(response => {\n        if (response) {\n          this.setState({\n            metrics: response.data,\n            metricId: response.data.data[0].metricId\n          });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistMetric\"));\n  }\n\n  //Grabs Artist Info\n  grabArtistInfo() {\n    //set artist info to null when searching for new artist info.\n    this.setState({ artistInfo: null });\n\n    axios\n      .get(`artists/${this.state.artistId}/`)\n      .then(response => {\n        if (response) {\n          this.setState({ artistInfo: response.data });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistInfo\"));\n  }\n\n  //Grab Artist Track Metrics\n  grabTrackMetrics() {\n    // cancel the previous request\n    if (typeof this._source != typeof undefined) {\n      this._source.cancel(\"Operation canceled due to new request.\");\n    }\n    // save the new request for cancellation\n    this._source = axios.CancelToken.source();\n\n    //set track Metrics to null when searching new metrics.\n    this.setState({ trackMetrics: {}, isTrackMetricLoading: true });\n\n    //metric ids that are used to call track metric API\n    let metricNum = [410, 411, 413, 414];\n\n    metricNum.forEach(mId => {\n      axios\n        .get(\n          `metrics/v1/entity/${this.state.artistId}/nestedAssets?metric=${mId}`,\n          // cancel token used by axios\n          { cancelToken: this._source.token }\n        )\n        .then(response => {\n          //console.log(`track metric${mId}`, response.data);\n          const tMetric = { ...this.state.trackMetrics };\n          //if theres no track metrics. API returns empty array. set trackMetrics state null\n          if (!response.data.data) {\n            tMetric[mId] = null;\n          } else {\n            tMetric[mId] = response.data;\n            if (this.state.isTrackMetricLoading) {\n              this.setState({\n                isTrackMetricLoading: false,\n                trackMetricId: mId\n              });\n            }\n          }\n          this.setState({ trackMetrics: tMetric });\n        })\n        .catch(error => {\n          if (axios.isCancel(error)) {\n            console.log(\"Request canceled\", error);\n          } else {\n            console.log(error);\n          }\n        });\n    });\n  }\n\n  //Filters through an array of metric arrays and returns matching metric ID to pass to barChart component.\n  getChartData = id => {\n    const dataArr = this.state.metrics.data.filter(item => {\n      return item.metricId === id;\n    });\n\n    //if data exists for metric id. grab deltas or totals\n    //refactor this code to create data with both deltas and totals. -AWOO\n    if (dataArr.length) {\n      let data;\n      if (id === 41 || id === 247) {\n        data = dataArr[0].timeseries.deltas;\n      } else {\n        data = dataArr[0].timeseries.totals;\n      }\n      const chartData = Object.keys(data).map(keys => {\n        return { date: new Date(keys), value: data[keys] };\n      });\n\n      return chartData;\n    }\n  };\n\n  //get track data\n  getTrackData = id => {\n    if (this.state.trackMetrics[id]) {\n      return this.state.trackMetrics[id].data.filter(data => {\n        return data.summary[this.state.trackDateRange];\n      });\n    }\n  };\n\n  handleMetricIdChange = id => {\n    if (this.state.metricId !== id) {\n      this.setState({ metricId: id });\n    }\n  };\n\n  onRangeChange = e => {\n    //manage dates with moment js. convert to unix time format. set state for endDate-startDate\n    if (this.state.startDate !== e[0] || this.state.endDate !== e[1]) {\n      this.setState({ startDate: e[0], endDate: e[1] });\n    }\n  };\n\n  handleTrackIdChange = id => {\n    if (this.state.trackMetricId !== id) {\n      //trackId 413 and 414 don't have LTD data. Switch to TW.\n      if (id === 413 || id === 414) {\n        if (this.state.trackDateRange === \"LTD\") {\n          this.setState({ trackDateRange: \"TW\" });\n        }\n      }\n      this.setState({ trackMetricId: id });\n    }\n  };\n\n  handleTrackDateRangeChange = dtRange => {\n    if (this.state.trackDateRange !== dtRange) {\n      this.setState({ trackDateRange: dtRange });\n    }\n  };\n\n  render() {\n    let {\n      artistId,\n      artistInfo,\n      metrics,\n      metricId,\n      metricMetadata,\n      trackMetricId,\n      trackMetrics,\n      isLoaded,\n      startDate,\n      endDate,\n      trackDateRange\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <NavigationBar handleArtistChange={this.handleArtistChange} />\n\n          {isLoaded ? (\n            <>\n              <ArtistInfo artistInfo={artistInfo} isLoaded={isLoaded} />\n\n              <SocialMediaMetrics\n                isLoaded={isLoaded}\n                metrics={metrics}\n                onRangeChange={this.onRangeChange}\n                handleMetricIdChange={this.handleMetricIdChange}\n                metricMetadata={metricMetadata}\n                getChartData={this.getChartData}\n                metricId={metricId}\n                startDate={startDate}\n                endDate={endDate}\n                artistId={artistId}\n              />\n\n              <TrackMetrics\n                isLoaded={isLoaded}\n                metricMetadata={metricMetadata}\n                trackMetricId={trackMetricId}\n                trackMetrics={trackMetrics}\n                getTrackData={this.getTrackData}\n                handleTrackIdChange={this.handleTrackIdChange}\n                handleTrackDateRangeChange={this.handleTrackDateRangeChange}\n                trackDateRange={trackDateRange}\n                artistId={artistId}\n              />\n            </>\n          ) : (\n            <SplashPage />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nconst publicKey = \"eb74a82009cbc53c9b44866743633f9d\";\n\naxios.defaults.baseURL = \"https://api.nextbigsound.com/\";\naxios.defaults.params = {};\naxios.defaults.params[\"access_token\"] = publicKey;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}