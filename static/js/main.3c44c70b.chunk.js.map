{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/UI/Spinner/Spinner.js","containers/ArtistInfo/ArtistInfo.js","components/BarChart/Rect/Rect.js","components/Tooltip/Tooltip.js","components/BarChart/BarChart.js","components/MetricViewBar/MetricViewBar.js","containers/SocialMediaMetrics/SocialMediaMetrics.js","components/BubbleChart/BubbleChart.js","components/TrackViewBar/TrackViewBar.js","components/TrackDateRange/TrackDateRange.js","containers/TrackMetrics/TrackMetrics.js","App.js","index.js"],"names":["navigationBar","props","react_default","a","createElement","className","id","type","placeholder","onChange","handleArtistChange","href","spinner","style","artistInfo","image","name","genre","content","recordLabels","monthlyActiveListeners","isLoaded","Spinner_Spinner","src","images","original","alt","genres","join","d3","pandoraAudience","total","Fragment","Rect","state","x","y","width","height","fill","this","animateRect","nextProps","nextState","_this$state","yExtent","refs","rect","attr","yScale","transition","duration","_this$state2","onMouseOver","onMouseOverCallback","onMouseOut","onMouseOutCallback","ref","prevState","Component","toolTip","xScale","styles","left","hoveredBar","top","colSpan","moment","invert","format","margin","BarChart","bars","range","wScale","paddingInner","paddingOuter","accentScale","metricId","startDate","endDate","artistId","xAxis","_this","tickFormat","yAxis","d","setState","drawAxis","prevProps","call","selectAll","_this2","transform","concat","map","i","BarChart_Rect_Rect","key","bandwidth","bind","textAnchor","yLabel","Tooltip_Tooltip","chartData","data","filter","sDate","unix","eDate","date","value","domain","metricViewBar","buttons","metricNames","obj","onClick","clicked","fullName","Range","createSliderWithTooltip","Slider","startDateUnix","Date","subtract","endDateUnix","socialMediaMetrics","chartTitle","metrics","getChartData","reduce","acc","metric","m","metricMetadata","push","sort","b","cArr","split","length","MetricViewBar_MetricViewBar","handleMetricIdChange","marginBottom","components_BarChart_BarChart","defaultValue","min","max","step","allowCross","tipFormatter","onAfterChange","onRangeChange","simulation","force","strength","BubbleChart","circles","rScale","cScale","trackDateRange","trackMetricId","forceTick","node","radius","on","renderCircles","nodes","alpha","restart","_this3","_this4","svgContainer","exit","remove","nodeEnter","enter","append","label","val","merge","select","text","substring","top15","summary","slice","metadata","asset_name","trackViewBar","padding","trackMetrics","handleTrackIdChange","Object","keys","dateRangeDict","handleTrackDateRangeChange","dateRangeTitle","circleData","bubbleTitle","TW","LW","LM","YTD","LTD","getTrackData","TrackViewBar_TrackViewBar","TrackDateRange","components_BubbleChart_BubbleChart","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","artist","event","emitDebouncedSearch","target","handleArtistSearch","dataArr","item","timeseries","deltas","totals","e","dtRange","debounce","grabMetricMetadata","grabArtistMetric","axios","get","then","response","metricTitles","items","description","catch","error","console","log","artists","resetArtistInfo","grabTrackMetrics","grabArtistInfo","_this5","_source","cancel","CancelToken","source","forEach","mId","cancelToken","token","tMetric","objectSpread","isCancel","NavigationBar_NavigationBar","ArtistInfo_ArtistInfo","SocialMediaMetrics_SocialMediaMetrics","TrackMetrics_TrackMetrics","defaults","baseURL","params","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3c44c70b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavigationBar.css\";\n\nconst navigationBar = props => {\n  return (\n    <nav className=\"NavigationBar\">\n      <div className=\"NavigationBar__search-bar\">\n        <input\n          id=\"search\"\n          className=\"NavigationBar__input\"\n          type=\"text\"\n          placeholder=\"Search For An Artist\"\n          onChange={props.handleArtistChange}\n        />\n      </div>\n      <div className=\"NavigationBar__links\">\n        <ul className=\"NavigationBar__ul\">\n          <li className=\"NavigationBar__li\">\n            <a href=\"#artistInfo\" className=\"NavigationBar__href\">\n              Artist Info\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#socialMedia\" className=\"NavigationBar__href\">\n              Social Media\n            </a>\n          </li>\n          <li className=\"NavigationBar__li\">\n            <a href=\"#trackSpins\" className=\"NavigationBar__href\">\n              Track Spins\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default navigationBar;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst spinner = props => {\n  return (\n    <div style={props.style} className=\"Loader\">\n      Loading...\n    </div>\n  );\n};\n\nexport default spinner;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as d3 from \"d3\";\nimport \"./ArtistInfo.css\";\n\nconst artistInfo = props => {\n  let image = null;\n  let name = null;\n  let genre = null;\n  let content = null;\n  let recordLabels = null;\n  let monthlyActiveListeners = null;\n\n  //if search is pending. show loading spinner.\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  //when artist info is retrived. load content instead of spinner.\n  if (props.artistInfo) {\n    image = <img src={props.artistInfo.images[0].original} alt=\"Artist\" />;\n    name = <h1>{props.artistInfo.name}</h1>;\n    genre = <h2>{props.artistInfo.genres.join(\" - \")}</h2>;\n    recordLabels = <p>{props.artistInfo.recordLabels.join(\" - \")}</p>;\n    monthlyActiveListeners = (\n      <p>\n        {d3.format(\",\")(\n          props.artistInfo.pandoraAudience.monthlyActiveListeners.total\n        )}\n      </p>\n    );\n\n    content = (\n      <>\n        <div className=\"ArtistInfo__info-image\">{image}</div>\n        <div className=\"ArtistInfo__info-description\">\n          {name}\n          {genre}\n          {recordLabels}\n        </div>\n        <section>\n          <h2>Monthly Active Listeners</h2>\n          <div>{monthlyActiveListeners}</div>\n        </section>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"artistInfo\" className=\"ArtistInfo\">\n      <div className=\"ArtistInfo__label\">\n        <span>Artist Info</span>\n      </div>\n      <div className=\"ArtistInfo__info\">{content}</div>\n    </div>\n  );\n};\n\nexport default artistInfo;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nclass Rect extends Component {\n  state = { x: null, y: null, width: null, height: null, fill: null };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!nextProps) return null;\n\n    return {\n      x: nextProps.x,\n      y: nextProps.y,\n      width: nextProps.width,\n      height: nextProps.height,\n      fill: nextProps.fill\n    };\n  }\n\n  componentDidMount() {\n    this.animateRect();\n  }\n\n  componentDidUpdate() {\n    this.animateRect();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.x !== this.state.x ||\n      nextProps.y !== this.state.y ||\n      nextProps.width !== this.state.width ||\n      nextProps.height !== this.state.height ||\n      nextProps.fill !== this.state.fill\n    );\n  }\n\n  animateRect() {\n    const { y, height } = this.state;\n\n    let rect;\n\n    //use yExtent if exists, if not use linear scale from range 0\n    if (this.props.yExtent) {\n      rect = d3\n        .select(this.refs.rect)\n        .attr(\"y\", this.props.yScale(this.props.yExtent[0]));\n    } else {\n      rect = d3.select(this.refs.rect).attr(\"y\", this.props.yScale(0));\n    }\n\n    //set up bar transition\n    rect\n      .attr(\"height\", 0)\n      .transition()\n      .duration(800)\n      .attr(\"y\", y)\n      .attr(\"height\", height);\n  }\n\n  render() {\n    const { x, y, height, width, fill } = this.state;\n\n    return (\n      <rect\n        onMouseOver={this.props.onMouseOverCallback}\n        onMouseOut={this.props.onMouseOutCallback}\n        ref=\"rect\"\n        x={x}\n        y={y}\n        height={height}\n        width={width}\n        fill={fill}\n      />\n    );\n  }\n}\n\nexport default Rect;\n","import React from \"react\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport \"./Tooltip.css\";\n\nconst toolTip = props => {\n  const { xScale, yScale } = props;\n  const styles = {\n    left: props.hoveredBar.x,\n    top: props.hoveredBar.y\n  };\n\n  return (\n    <div className=\"Tooltip\" style={styles}>\n      <table>\n        <thead>\n          <tr>\n            <th colSpan=\"2\" />\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td colSpan=\"1\">Date:</td>\n            <td colSpan=\"1\">\n              {moment(xScale.invert(props.hoveredBar.x)).format(\"MMM Do YYYY\")}\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"1\">Value:</td>\n            <td colSpan=\"1\">\n              {d3.format(\",.0f\")(yScale.invert(props.hoveredBar.y))}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default toolTip;\n","import React, { Component } from \"react\";\nimport Rect from \"./Rect/Rect\";\nimport moment from \"moment\";\nimport * as d3 from \"d3\";\nimport \"./BarChart.css\";\nimport Tooltip from \"../Tooltip/Tooltip\";\n\n//setting up global values for svg height and width\nconst margin = { left: 100, top: 20, right: 20, bottom: 50 };\nconst height = 480 - margin.top - margin.bottom;\nconst width = 800 - margin.left - margin.right;\n\nclass BarChart extends Component {\n  state = {\n    bars: [],\n    xScale: d3.scaleTime().range([0, width]),\n    yScale: d3.scaleLinear().range([height, 0]),\n    //yScale: d3.scaleLog().range([height, 0]),\n    wScale: d3\n      .scaleBand()\n      .range([0, width])\n      .paddingInner(0.1)\n      .paddingOuter(0),\n    accentScale: d3.scaleSequential(d3.interpolateRdBu),\n    yExtent: null,\n    metricId: null,\n    startDate: null,\n    endDate: null,\n    artistId: null,\n    hoveredBar: null\n  };\n\n  //setting up axis and tick formats\n  xAxis = d3.axisBottom(this.state.xScale).tickFormat(d3.timeFormat(\"%b-%Y\"));\n  yAxis = d3.axisLeft(this.state.yScale);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps, !nextProps);\n    if (!nextProps) return null;\n\n    const { chartData, startDate, endDate, metricId, artistId } = nextProps;\n    const { xScale, yScale, wScale, accentScale } = prevState;\n\n    //clean data\n    const data = chartData\n      .filter(d => {\n        let sDate = moment.unix(startDate);\n        let eDate = moment.unix(endDate);\n        let date = moment(d.date);\n        return d.value && d.date && date >= sDate && date <= eDate;\n      })\n      .map(d => {\n        d.value = +d.value;\n        return d;\n      });\n\n    //recalculate scales with new data\n    xScale.domain(d3.extent(data, d => d.date));\n    yScale.domain([0, d3.max(data, d => d.value)]);\n    //Below is yscale for log\n    //const yExtent = d3.extent(data, d => d.value);\n    //yScale.domain(d3.extent(data, d => d.value));\n    wScale.domain(data.map(d => d.date));\n    accentScale.domain([d3.max(data, d => d.value), 0]);\n\n    //create rect x and y values.\n    const bars = data.map(d => {\n      return {\n        x: xScale(d.date),\n        y: yScale(d.value),\n        height: height - yScale(d.value),\n        fill: accentScale(d.value)\n      };\n    });\n\n    return { bars, yScale, metricId, startDate, endDate, artistId };\n  }\n\n  //Only update barChart if data has been changed.\n  shouldComponentUpdate(nextProps, nextState) {\n    //console.log(\"shouldComponentUpdate\", nextProps, this.state);\n    return (\n      nextProps.metricId !== this.state.metricId ||\n      nextProps.startDate !== this.state.startDate ||\n      nextProps.endDate !== this.state.endDate ||\n      nextProps.artistId !== this.state.artistId ||\n      nextState.hoveredBar !== this.state.hoveredBar\n    );\n  }\n\n  //happens once. render x and y axis on loadup.\n  componentDidMount() {\n    this.drawAxis();\n  }\n\n  //update axis when component updates\n  componentDidUpdate(prevProps, prevState) {\n    this.drawAxis();\n  }\n\n  drawAxis() {\n    d3.select(this.refs.xAxis)\n      .transition()\n      .duration(800)\n      .call(this.xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", \"rotate(-65)\");\n    d3.select(this.refs.yAxis)\n      .transition()\n      .duration(800)\n      .call(this.yAxis);\n  }\n\n  onMouseOverCallback = d => {\n    this.setState({ hoveredBar: d });\n  };\n  onMouseOutCallback = d => {\n    this.setState({ hoveredBar: null });\n  };\n\n  render() {\n    return (\n      <div className=\"BarChart\">\n        <svg\n          height={height + margin.top + margin.bottom}\n          width={width + margin.left + margin.right}\n        >\n          <g transform={`translate(${margin.left},${margin.top})`}>\n            {this.state.bars.map((d, i) => {\n              return (\n                <Rect\n                  key={i}\n                  x={d.x}\n                  y={d.y}\n                  height={d.height}\n                  width={this.state.wScale.bandwidth()}\n                  fill={d.fill}\n                  yScale={this.state.yScale}\n                  onMouseOverCallback={this.onMouseOverCallback.bind(this, d)}\n                  onMouseOutCallback={this.onMouseOutCallback.bind(this, null)}\n                />\n              );\n            })}\n            <g ref=\"xAxis\" transform={`translate(0, ${height})`} />\n            <g ref=\"yAxis\" />\n\n            <text\n              className=\"BarChart-yLabel\"\n              x={-(height / 2)}\n              y={-80}\n              transform=\"rotate(-90)\"\n              textAnchor=\"middle\"\n            >\n              {this.props.yLabel}\n            </text>\n          </g>\n        </svg>\n        {this.state.hoveredBar ? (\n          <Tooltip\n            hoveredBar={this.state.hoveredBar}\n            xScale={this.state.xScale}\n            yScale={this.state.yScale}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport \"./MetricViewBar.css\";\n\nconst metricViewBar = props => {\n  let buttons;\n\n  if (props.metricNames) {\n    buttons = props.metricNames.map(obj => {\n      return (\n        <button\n          key={obj.id}\n          className=\"MetricView__buttons\"\n          onClick={props.clicked.bind(this, obj.id)}\n        >\n          {obj.fullName}\n        </button>\n      );\n    });\n  }\n\n  return <div className=\"MetricViews\">{buttons}</div>;\n};\n\nexport default metricViewBar;\n","import React from \"react\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport BarChart from \"../../components/BarChart/BarChart\";\nimport MetricViewBar from \"../../components/MetricViewBar/MetricViewBar\";\nimport Slider from \"rc-slider\";\n//import Range from \"rc-slider/lib/Range\";\nimport moment from \"moment\";\nimport \"rc-slider/assets/index.css\";\nimport \"./SocialMediaMetrics.css\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n//get 5 years ago in unix time\nconst startDateUnix = moment(new Date())\n  .subtract(5, \"y\")\n  .unix();\n//get todays date in unix time\nconst endDateUnix = moment(new Date()).unix();\n\nconst socialMediaMetrics = props => {\n  // let barChart = null;\n  let data = null;\n  let metricNames = null;\n  let content = null;\n  let chartTitle = null;\n  let yLabel = null;\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n  //only do work if metrics is not null;\n  if (props.metrics) {\n    //Grab data if metric Id was changed\n    data = props.getChartData(props.metricId);\n\n    //grab list of metric names. gets passed into metric view bar.\n    metricNames = props.metrics.data\n      .reduce((acc, metric) => {\n        //look up fullName for each existing metric for artist.\n        let m = props.metricMetadata[metric.metricId];\n        if (m) {\n          acc.push({ fullName: m.fullName, id: metric.metricId });\n        }\n        return acc;\n      }, [])\n      .sort((a, b) => {\n        return a.id - b.id;\n      });\n\n    chartTitle = props.metricMetadata[props.metricId].fullName;\n\n    //grab the last word for y label. gets passed into bar chart.\n    let cArr = chartTitle.split(\" \");\n    yLabel = cArr[cArr.length - 1];\n\n    content = (\n      <>\n        <MetricViewBar\n          clicked={props.handleMetricIdChange}\n          metricNames={metricNames}\n          chartTitle={chartTitle}\n        />\n        <h1 style={{ marginBottom: \".3em\" }}>{chartTitle}</h1>\n        <BarChart\n          chartData={data}\n          yLabel={yLabel}\n          metricId={props.metricId}\n          startDate={props.startDate}\n          endDate={props.endDate}\n          artistId={props.artistId}\n        />\n        <span className=\"SocialMediaMetrics__metrics-date-range\">\n          {moment.unix(props.startDate).format(\"MMM Do YYYY\")}\n          {\"   -   \"}\n          {moment.unix(props.endDate).format(\"MMM Do YYYY\")}\n        </span>\n        <Range\n          className=\"SocialMediaMetrics__metrics-range-slider\"\n          defaultValue={[props.startDate, props.endDate]}\n          min={startDateUnix}\n          max={endDateUnix}\n          step={86400 /*1 day in seconds*/}\n          allowCross={false}\n          tipFormatter={value => moment.unix(value).format(\"MMM Do YYYY\")}\n          onAfterChange={props.onRangeChange}\n        />\n      </>\n    );\n  }\n\n  //return barChart;\n  return (\n    <div id=\"socialMedia\" className=\"SocialMediaMetrics\">\n      <div className=\"SocialMediaMetrics__label\">\n        <span>Social Media</span>\n      </div>\n      <div className=\"SocialMediaMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default socialMediaMetrics;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\n//setting up global values for svg height and width\nconst margin = { left: 20, top: 20, right: 20, bottom: 20 };\nconst height = 600 - margin.top - margin.bottom;\nconst width = 800 - margin.left - margin.right;\n\n//setup the simulation for the bubbles to explode from the center on data change\nconst simulation = d3\n  .forceSimulation()\n  .force(\"center\", d3.forceCenter(width / 2, height / 2))\n  .force(\"charge\", d3.forceManyBody().strength(200));\n\nclass BubbleChart extends Component {\n  state = {\n    circles: [],\n    rScale: d3.scaleLinear().range([30, 125]),\n    cScale: d3.scaleOrdinal(d3.schemePaired),\n    trackDateRange: null,\n    trackMetricId: null,\n    artistId: null\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps,prevState);\n    if (!nextProps) return null;\n    const { data, trackDateRange, trackMetricId, artistId } = nextProps;\n    const { rScale, cScale } = prevState;\n\n    //filter top 15\n    let top15 = data\n      .sort((a, b) => {\n        return b.summary[trackDateRange] - a.summary[trackDateRange];\n      })\n      .slice(0, 15);\n\n    //Update scales with new data\n    rScale.domain(d3.extent(top15, d => d.summary[trackDateRange]));\n    cScale.domain(top15, d => d.metadata.asset_name);\n\n    //create data for circles\n    const circles = top15.map(data => {\n      return {\n        name: data.metadata.asset_name,\n        value: data.summary[trackDateRange]\n      };\n    });\n\n    return { circles, trackDateRange, trackMetricId, artistId };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.trackDateRange !== this.state.trackDateRange ||\n      nextProps.trackMetricId !== this.state.trackMetricId ||\n      nextProps.artistId !== this.state.artistId\n    );\n  }\n\n  componentDidMount() {\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n    this.renderCircles();\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  componentDidUpdate() {\n    //console.log(\"bubbleChart: componentDidUpdate\");\n    //console.log(this.state.circles);\n\n    simulation\n      .force(\n        \"collision\",\n        d3.forceCollide().radius(d => this.state.rScale(d.value))\n      )\n      .on(\"tick\", this.forceTick);\n\n    this.renderCircles();\n\n    simulation\n      .nodes(this.state.circles)\n      .alpha(0.9)\n      .restart();\n  }\n\n  renderCircles() {\n    //console.log(\"renderCircles\", this.state.circles);\n\n    //JOIN\n    this.node = d3\n      .select(this.refs.svgContainer)\n      .selectAll(\"g\")\n      .data(this.state.circles);\n\n    //EXIT\n    this.node.exit().remove();\n\n    //ENTER\n    this.nodeEnter = this.node.enter().append(\"g\");\n    this.circles = this.nodeEnter.append(\"circle\");\n    this.label = this.nodeEnter.append(\"text\").attr(\"id\", \"label\");\n    this.val = this.nodeEnter.append(\"text\").attr(\"id\", \"val\");\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"circle\")\n      .attr(\"y\", 1)\n      .attr(\"r\", d => this.state.rScale(d.value))\n      .attr(\"fill\", d => this.state.cScale(d.name));\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"#label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"fill\", \"black\")\n      .attr(\"font-family\", \"'Pragati Narrow', sans-serif\")\n      .text(d => {\n        //saving time instead of focusing on how to get text to wrap.\n        if (d.name.length > 17 && this.state.rScale(d.value) / 3 > 17)\n          return d.name.substring(0, 17);\n        return d.name.substring(0, this.state.rScale(d.value) / 3);\n      });\n\n    //ENTER + UPDATE\n    this.node = this.nodeEnter.merge(this.node);\n    this.node\n      .select(\"#val\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => this.state.rScale(d.value) / 4)\n      .attr(\"dy\", \"1em\")\n      .attr(\"fill\", \"black\")\n      .attr(\"font-family\", \"'Pragati Narrow', sans-serif\")\n      .text(d => d3.format(\",\")(d.value));\n  }\n\n  //update positioning of group every tick.\n  forceTick = () => {\n    this.node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  };\n\n  render() {\n    return <svg ref=\"svgContainer\" width={width} height={height} />;\n  }\n}\n\nexport default BubbleChart;\n","import React from \"react\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport \"./TrackViewBar.css\";\n\nconst trackViewBar = props => {\n  let style = {\n    transform: \"scale(.5)\",\n    margin: \"0px 65px\",\n    padding: \"0\"\n  };\n  return (\n    <div className=\"TrackViews\">\n      {props.trackMetrics[410] ? (\n        <button onClick={props.handleTrackIdChange.bind(this, 410)}>\n          {props.metricMetadata[410].fullName}\n        </button>\n      ) : (\n        <Spinner />\n      )}\n      {props.trackMetrics[411] ? (\n        <button onClick={props.handleTrackIdChange.bind(this, 411)}>\n          {props.metricMetadata[411].fullName}\n        </button>\n      ) : (\n        <Spinner style={style} />\n      )}\n      {props.trackMetrics[413] ? (\n        <button onClick={props.handleTrackIdChange.bind(this, 413)}>\n          {props.metricMetadata[413].fullName}\n        </button>\n      ) : (\n        <Spinner style={style} />\n      )}\n      {props.trackMetrics[414] ? (\n        <button onClick={props.handleTrackIdChange.bind(this, 414)}>\n          {props.metricMetadata[414].fullName}\n        </button>\n      ) : (\n        <Spinner style={style} />\n      )}\n    </div>\n  );\n};\n\nexport default trackViewBar;\n","import React from \"react\";\n\nconst trackDateRange = props => {\n  const dateRangeButtons = Object.keys(props.dateRangeDict).map(key => {\n    if (key === \"LTD\" && props.trackMetricId === 413) return null;\n    if (key === \"LTD\" && props.trackMetricId === 414) return null;\n    return (\n      <button\n        style={{ margin: \"12px 0\" }}\n        key={key}\n        onClick={props.handleTrackDateRangeChange.bind(this, key)}\n      >\n        {props.dateRangeDict[key]}\n      </button>\n    );\n  });\n\n  return dateRangeButtons;\n};\n\nexport default trackDateRange;\n","import React from \"react\";\nimport BubbleChart from \"../../components/BubbleChart/BubbleChart\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport \"./TrackMetrics.css\";\nimport TrackViewBar from \"../../components/TrackViewBar/TrackViewBar\";\nimport TrackDateRange from \"../../components/TrackDateRange/TrackDateRange\";\n\nconst trackMetrics = props => {\n  let circleData = null;\n  let content = null;\n  let bubbleTitle = null;\n  let dateRangeDict = {\n    TW: \"This Week\",\n    LW: \"Last Week\",\n    LM: \"Last Month\",\n    YTD: \"Year To Date\",\n    LTD: \"Lifetime Value\"\n  };\n  let dateRangeTitle;\n\n  //props.trackDateRange\n\n  if (props.isLoaded) {\n    content = <Spinner />;\n  }\n\n  if (props.trackMetrics[props.trackMetricId]) {\n    //grab bubble chart data with new metric id.\n    circleData = props.getTrackData(props.trackMetricId);\n\n    //grab chart title from metric dictionary.\n    bubbleTitle = props.metricMetadata[props.trackMetricId].fullName;\n    dateRangeTitle = dateRangeDict[props.trackDateRange];\n\n    content = (\n      <>\n        <TrackViewBar\n          trackMetrics={props.trackMetrics}\n          handleTrackIdChange={props.handleTrackIdChange}\n          metricMetadata={props.metricMetadata}\n        />\n        <h1 className=\"TrackMetrics__metrics-title\">{bubbleTitle}</h1>\n        <h2 className=\"TrackMetrics__metrics-range\">{dateRangeTitle}</h2>\n        <div className=\"TrackMetrics__section\">\n          <div className=\"TrackMetrics__section-range\">\n            <TrackDateRange\n              handleTrackDateRangeChange={props.handleTrackDateRangeChange}\n              dateRangeDict={dateRangeDict}\n              trackMetricId={props.trackMetricId}\n            />\n          </div>\n          <div>\n            <BubbleChart\n              className=\"BubbleChart\"\n              data={circleData}\n              trackDateRange={props.trackDateRange}\n              trackMetricId={props.trackMetricId}\n              artistId={props.artistId}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div id=\"trackSpins\" className=\"TrackMetrics\">\n      <div className=\"TrackMetrics__label\">\n        <span>Track Spins</span>\n      </div>\n      <div className=\"TrackMetrics__metrics\">{content}</div>\n    </div>\n  );\n};\n\nexport default trackMetrics;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport debounce from \"lodash/debounce\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport ArtistInfo from \"./containers/ArtistInfo/ArtistInfo\";\nimport SocialMediaMetrics from \"./containers/SocialMediaMetrics/SocialMediaMetrics\";\nimport TrackMetrics from \"./containers/TrackMetrics/TrackMetrics\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  state = {\n    artist: \"\",\n    artistId: \"\",\n    artistInfo: null,\n    metrics: null,\n    metricMetadata: null,\n    metricId: 41,\n    trackMetricId: 410,\n    trackMetrics: {},\n    startDate: moment(new Date())\n      .subtract(5, \"y\")\n      .unix(),\n    endDate: moment(new Date()).unix(),\n    trackDateRange: \"TW\",\n    isLoaded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.emitDebouncedSearch = debounce(this.handleArtistSearch, 500);\n  }\n\n  //Search Artis Event Handlers\n  handleArtistChange = event => {\n    this.emitDebouncedSearch(event.target.value);\n  };\n  handleArtistSearch = val => {\n    this.setState({ artist: val });\n  };\n\n  componentDidMount() {\n    this.grabMetricMetadata();\n    if (this.state.artist) {\n      this.grabArtistMetric();\n      //this.grabArtistInfo();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Only update artist data if new entry is not blank or different from prev entry\n    if (this.state.artist) {\n      if (this.state.artist !== prevState.artist) {\n        this.grabArtistMetric();\n        //this.grabArtistInfo();\n      }\n    }\n  }\n\n  resetArtistInfo() {\n    this.setState({ trackMetrics: {}, metrics: null, artistInfo: null });\n  }\n\n  //Grabs the metric meta data.\n  grabMetricMetadata() {\n    axios\n      .get(\"metrics/?fields=items.*\")\n      .then(response => {\n        //grab fullname and descriptions for corresponding ids.\n        let metricTitles = response.data.items.reduce((acc, m) => {\n          acc[m.id] = { fullName: m.fullName, description: m.description };\n          return acc;\n        }, {});\n\n        this.setState({ metricMetadata: metricTitles });\n      })\n      .catch(error => console.log(error, \"grabMetricMetadata\"));\n  }\n\n  //method to grab artist metrics.\n  grabArtistMetric() {\n    //Grab 5 years of data\n    const startDate = moment(new Date())\n      .subtract(5, \"y\")\n      .format(\"YYYY-MM-DD\");\n    const endDate = moment(new Date()).format(\"YYYY-MM-DD\");\n\n    //API searches for one artist.\n    axios\n      .get(`search/v1/artists/?query=${this.state.artist}&limit=1`)\n      .then(response => {\n        if (!response.data.artists.length) return null;\n\n        //When searching for new artist. Set is loaded to true. Add spinner bars for each section.\n        this.setState({ isLoaded: true });\n        this.resetArtistInfo();\n\n        //Set state for artist info.\n        const artistInfo = response.data.artists[0];\n        this.setState({ artistId: artistInfo.id });\n\n        //grab Track metrics\n        this.grabTrackMetrics();\n\n        //grab artist info\n        this.grabArtistInfo();\n\n        //set metrics to null when searching for new artist metrics;\n        this.setState({ metrics: null });\n        //Grabs Social Media Metrics\n        //id: 28, 41, 11, 151, 247\n        return axios.get(\n          `artists/${\n            artistInfo.id\n          }/data?metricIds=28,41,11,151,247&startDate=${startDate}&endDate=${endDate}&timeseries=totals,deltas`\n        );\n      })\n      .then(response => {\n        if (response) {\n          this.setState({\n            metrics: response.data,\n            metricId: response.data.data[0].metricId\n          });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistMetric\"));\n  }\n\n  //Grabs Artist Info\n  grabArtistInfo() {\n    //set artist info to null when searching for new artist info.\n    this.setState({ artistInfo: null });\n\n    axios\n      .get(`artists/${this.state.artistId}/`)\n      .then(response => {\n        if (response) {\n          this.setState({ artistInfo: response.data });\n        }\n      })\n      .catch(error => console.log(error, \"grabArtistInfo\"));\n  }\n\n  //Grab Artist Track Metrics\n  grabTrackMetrics() {\n    // cancel the previous request\n    if (typeof this._source != typeof undefined) {\n      this._source.cancel(\"Operation canceled due to new request.\");\n    }\n    // save the new request for cancellation\n    this._source = axios.CancelToken.source();\n\n    //set track Metrics to null when searching new metrics.\n    this.setState({ trackMetrics: {} });\n\n    //metric ids that are used to call track metric API\n    let metricNum = [410, 411, 413, 414];\n\n    metricNum.forEach(mId => {\n      axios\n        .get(\n          `metrics/v1/entity/${this.state.artistId}/nestedAssets?metric=${mId}`,\n          // cancel token used by axios\n          { cancelToken: this._source.token }\n        )\n        .then(response => {\n          //console.log(`track metric${mId}`, response.data);\n          const tMetric = { ...this.state.trackMetrics };\n          //if theres no track metrics. API returns empty array. set trackMetrics state null\n          if (!response.data.data) {\n            tMetric[mId] = null;\n          } else {\n            tMetric[mId] = response.data;\n          }\n          this.setState({ trackMetrics: tMetric });\n        })\n        .catch(error => {\n          if (axios.isCancel(error)) {\n            console.log(\"Request canceled\", error);\n          } else {\n            console.log(error);\n          }\n        });\n    });\n  }\n\n  //Filters through an array of metric arrays and returns matching metric ID to pass to barChart component.\n  getChartData = id => {\n    const dataArr = this.state.metrics.data.filter(item => {\n      return item.metricId === id;\n    });\n\n    //if data exists for metric id. grab deltas or totals\n    //refactor this code to create data with both deltas and totals. -AWOO\n    if (dataArr.length) {\n      let data;\n      if (id === 41 || id === 247) {\n        data = dataArr[0].timeseries.deltas;\n      } else {\n        data = dataArr[0].timeseries.totals;\n      }\n      const chartData = Object.keys(data).map(keys => {\n        return { date: new Date(keys), value: data[keys] };\n      });\n\n      return chartData;\n    }\n  };\n\n  //get track data\n  getTrackData = id => {\n    if (this.state.trackMetrics[id]) {\n      return this.state.trackMetrics[id].data.filter(data => {\n        return data.summary[this.state.trackDateRange];\n      });\n    }\n  };\n\n  handleMetricIdChange = id => {\n    if (this.state.metricId !== id) {\n      this.setState({ metricId: id });\n    }\n  };\n\n  onRangeChange = e => {\n    //manage dates with moment js. convert to unix time format. set state for endDate-startDate\n    if (this.state.startDate !== e[0] || this.state.endDate !== e[1]) {\n      this.setState({ startDate: e[0], endDate: e[1] });\n    }\n  };\n\n  handleTrackIdChange = id => {\n    if (this.state.trackMetricId !== id) {\n      this.setState({ trackMetricId: id });\n    }\n  };\n\n  handleTrackDateRangeChange = dtRange => {\n    if (this.state.trackDateRange !== dtRange) {\n      this.setState({ trackDateRange: dtRange });\n    }\n  };\n\n  render() {\n    let {\n      artistId,\n      artistInfo,\n      metrics,\n      metricId,\n      metricMetadata,\n      trackMetricId,\n      trackMetrics,\n      isLoaded,\n      startDate,\n      endDate,\n      trackDateRange\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <NavigationBar handleArtistChange={this.handleArtistChange} />\n\n          {isLoaded ? (\n            <>\n              <ArtistInfo artistInfo={artistInfo} isLoaded={isLoaded} />\n\n              <SocialMediaMetrics\n                isLoaded={isLoaded}\n                metrics={metrics}\n                onRangeChange={this.onRangeChange}\n                handleMetricIdChange={this.handleMetricIdChange}\n                metricMetadata={metricMetadata}\n                getChartData={this.getChartData}\n                metricId={metricId}\n                startDate={startDate}\n                endDate={endDate}\n                artistId={artistId}\n              />\n\n              <TrackMetrics\n                isLoaded={isLoaded}\n                metricMetadata={metricMetadata}\n                trackMetricId={trackMetricId}\n                trackMetrics={trackMetrics}\n                getTrackData={this.getTrackData}\n                handleTrackIdChange={this.handleTrackIdChange}\n                handleTrackDateRangeChange={this.handleTrackDateRangeChange}\n                trackDateRange={trackDateRange}\n                artistId={artistId}\n              />\n            </>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport axios from \"axios\";\n\nconst publicKey = \"eb74a82009cbc53c9b44866743633f9d\";\n\naxios.defaults.baseURL = \"https://api.nextbigsound.com/\";\naxios.defaults.params = {};\naxios.defaults.params[\"access_token\"] = publicKey;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}